{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2021-03-23T08:19:58.968Z",
    "end": "2021-03-23T08:20:01.917Z",
    "duration": 2949,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "eacb6cf6-504e-4c19-b541-d68f7ecfa9b3",
      "title": "",
      "fullFile": "cypress/integration/examples/querying.spec.js",
      "file": "cypress/integration/examples/querying.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7a5690d8-32c7-4ba9-a75a-fb4781cca821",
          "title": "Querying",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.get() - query DOM elements",
              "fullTitle": "Querying cy.get() - query DOM elements",
              "timedOut": null,
              "duration": 523,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/get\ncy.get(\"#query-btn\").should(\"contain\", \"Button\");\ncy.get(\".query-btn\").should(\"contain\", \"Button\");\ncy.get(\"#querying .well>button:first\").should(\"contain\", \"Button\"); //              â†²\n// Use CSS selectors just like jQuery\ncy.get('[data-test-id=\"test-example\"]').should(\"have.class\", \"example\"); // 'cy.get()' yields jQuery object, you can get its attribute\n// by invoking `.attr()` method\ncy.get('[data-test-id=\"test-example\"]').invoke(\"attr\", \"data-test-id\").should(\"equal\", \"test-example\"); // or you can get element's CSS property\ncy.get('[data-test-id=\"test-example\"]').invoke(\"css\", \"position\").should(\"equal\", \"static\"); // or use assertions directly during 'cy.get()'\n// https://on.cypress.io/assertions\ncy.get('[data-test-id=\"test-example\"]').should(\"have.attr\", \"data-test-id\", \"test-example\").and(\"have.css\", \"position\", \"static\");",
              "err": {},
              "uuid": "de332201-8a69-43bd-89b9-6cf46f0f4a56",
              "parentUUID": "7a5690d8-32c7-4ba9-a75a-fb4781cca821",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.contains() - query DOM elements with matching content",
              "fullTitle": "Querying cy.contains() - query DOM elements with matching content",
              "timedOut": null,
              "duration": 228,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/contains\ncy.get(\".query-list\").contains(\"bananas\").should(\"have.class\", \"third\"); // we can pass a regexp to `.contains()`\ncy.get(\".query-list\").contains(/^b\\w+/).should(\"have.class\", \"third\");\ncy.get(\".query-list\").contains(\"apples\").should(\"have.class\", \"first\"); // passing a selector to contains will\n// yield the selector containing the text\ncy.get(\"#querying\").contains(\"ul\", \"oranges\").should(\"have.class\", \"query-list\");\ncy.get(\".query-button\").contains(\"Save Form\").should(\"have.class\", \"btn\");",
              "err": {},
              "uuid": "f44b6510-6ff0-4784-b0c4-c50fd6f8a58a",
              "parentUUID": "7a5690d8-32c7-4ba9-a75a-fb4781cca821",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".within() - query DOM elements within a specific element",
              "fullTitle": "Querying .within() - query DOM elements within a specific element",
              "timedOut": null,
              "duration": 121,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/within\ncy.get(\".query-form\").within(function () {\n  cy.get(\"input:first\").should(\"have.attr\", \"placeholder\", \"Email\");\n  cy.get(\"input:last\").should(\"have.attr\", \"placeholder\", \"Password\");\n});",
              "err": {},
              "uuid": "5c76ca43-e7a5-44f9-9ad5-5c90a8511a96",
              "parentUUID": "7a5690d8-32c7-4ba9-a75a-fb4781cca821",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.root() - query the root DOM element",
              "fullTitle": "Querying cy.root() - query the root DOM element",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/root\n// By default, root is the document\ncy.root().should(\"match\", \"html\");\ncy.get(\".query-ul\").within(function () {\n  // In this within, the root is now the ul DOM element\n  cy.root().should(\"have.class\", \"query-ul\");\n});",
              "err": {},
              "uuid": "b619de19-a1f6-4502-a8a0-4d386c39dcbd",
              "parentUUID": "7a5690d8-32c7-4ba9-a75a-fb4781cca821",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "best practices - selecting elements",
              "fullTitle": "Querying best practices - selecting elements",
              "timedOut": null,
              "duration": 778,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/best-practices#Selecting-Elements\ncy.get(\"[data-cy=best-practices-selecting-elements]\").within(function () {\n  // Worst - too generic, no context\n  cy.get(\"button\").click(); // Bad. Coupled to styling. Highly subject to change.\n  cy.get(\".btn.btn-large\").click(); // Average. Coupled to the `name` attribute which has HTML semantics.\n  cy.get(\"[name=submission]\").click(); // Better. But still coupled to styling or JS event listeners.\n  cy.get(\"#main\").click(); // Slightly better. Uses an ID but also ensures the element\n  // has an ARIA role attribute\n  cy.get(\"#main[role=button]\").click(); // Much better. But still coupled to text content that may change.\n  cy.contains(\"Submit\").click(); // Best. Insulated from all changes.\n  cy.get(\"[data-cy=submit]\").click();\n});",
              "err": {},
              "uuid": "ac92c7c6-e2e2-4c2b-86b8-244b8e1c5202",
              "parentUUID": "7a5690d8-32c7-4ba9-a75a-fb4781cca821",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "de332201-8a69-43bd-89b9-6cf46f0f4a56",
            "f44b6510-6ff0-4784-b0c4-c50fd6f8a58a",
            "5c76ca43-e7a5-44f9-9ad5-5c90a8511a96",
            "b619de19-a1f6-4502-a8a0-4d386c39dcbd",
            "ac92c7c6-e2e2-4c2b-86b8-244b8e1c5202"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1792,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}