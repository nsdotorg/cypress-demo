{
  "stats": {
    "suites": 32,
    "tests": 137,
    "passes": 118,
    "pending": 0,
    "failures": 16,
    "start": "2021-03-23T08:17:53.523Z",
    "end": "2021-03-23T08:24:57.515Z",
    "duration": 271872,
    "testsRegistered": 137,
    "passPercent": 86.13138686131387,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 3,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "fd570fc5-8bec-4fc5-941b-0dec70f72b84",
      "title": "",
      "fullFile": "cypress/integration/zeroTest.feature",
      "file": "cypress/integration/zeroTest.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f29015bc-9867-4158-8eef-fd5bf1e4bad1",
          "title": "Login",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Conduit Login",
              "fullTitle": "Login Conduit Login",
              "timedOut": null,
              "duration": 14479,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find content: 'Your Feed' but never did.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find content: 'Your Feed' but never did.\n    at Context.eval (https://react-redux.realworld.io/__cypress/tests?p=cypress/integration/zeroTest.feature:52:6)\n    at Context.resolveAndRunStepDefinition (https://react-redux.realworld.io/__cypress/tests?p=cypress/integration/zeroTest.feature:10439:9)\n    at Context.eval (https://react-redux.realworld.io/__cypress/tests?p=cypress/integration/zeroTest.feature:9780:35)",
                "diff": null
              },
              "uuid": "be11d371-fc85-4344-829f-6f7fa90d194b",
              "parentUUID": "f29015bc-9867-4158-8eef-fd5bf1e4bad1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "be11d371-fc85-4344-829f-6f7fa90d194b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14479,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5c2ef61c-7684-4b22-ba9a-049651f5c3a5",
      "title": "",
      "fullFile": "cypress/integration/examples/actions.spec.js",
      "file": "cypress/integration/examples/actions.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c182fe5c-3f81-403d-a3bf-8726525063de",
          "title": "Actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".type() - type into a DOM element",
              "fullTitle": "Actions .type() - type into a DOM element",
              "timedOut": null,
              "duration": 5540,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/type\ncy.get(\".action-email\").type(\"fake@email.com\").should(\"have.value\", \"fake@email.com\") // .type() with special character sequences\n.type(\"{leftarrow}{rightarrow}{uparrow}{downarrow}\").type(\"{del}{selectall}{backspace}\") // .type() with key modifiers\n.type(\"{alt}{option}\") //these are equivalent\n.type(\"{ctrl}{control}\") //these are equivalent\n.type(\"{meta}{command}{cmd}\") //these are equivalent\n.type(\"{shift}\") // Delay each keypress by 0.1 sec\n.type(\"slow.typing@email.com\", {\n  delay: 100\n}).should(\"have.value\", \"slow.typing@email.com\");\ncy.get(\".action-disabled\") // Ignore error checking prior to type\n// like whether the input is visible or disabled\n.type(\"disabled error checking\", {\n  force: true\n}).should(\"have.value\", \"disabled error checking\");",
              "err": {},
              "uuid": "d553c61c-5005-4648-a819-b95b0a4ae32e",
              "parentUUID": "c182fe5c-3f81-403d-a3bf-8726525063de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".focus() - focus on a DOM element",
              "fullTitle": "Actions .focus() - focus on a DOM element",
              "timedOut": null,
              "duration": 329,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focus\ncy.get(\".action-focus\").focus().should(\"have.class\", \"focus\").prev().should(\"have.attr\", \"style\", \"color: orange;\");",
              "err": {},
              "uuid": "17c7bb56-9c4f-4265-aaec-6172cfdd7081",
              "parentUUID": "c182fe5c-3f81-403d-a3bf-8726525063de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".blur() - blur off a DOM element",
              "fullTitle": "Actions .blur() - blur off a DOM element",
              "timedOut": null,
              "duration": 531,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blur\ncy.get(\".action-blur\").type(\"About to blur\").blur().should(\"have.class\", \"error\").prev().should(\"have.attr\", \"style\", \"color: red;\");",
              "err": {},
              "uuid": "27807135-c9ba-4989-af9f-12a8c2d81fb2",
              "parentUUID": "c182fe5c-3f81-403d-a3bf-8726525063de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".clear() - clears an input or textarea element",
              "fullTitle": "Actions .clear() - clears an input or textarea element",
              "timedOut": null,
              "duration": 572,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clear\ncy.get(\".action-clear\").type(\"Clear this text\").should(\"have.value\", \"Clear this text\").clear().should(\"have.value\", \"\");",
              "err": {},
              "uuid": "65a01056-04ed-4fbe-981f-32060934b9b0",
              "parentUUID": "c182fe5c-3f81-403d-a3bf-8726525063de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".submit() - submit a form",
              "fullTitle": "Actions .submit() - submit a form",
              "timedOut": null,
              "duration": 461,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/submit\ncy.get(\".action-form\").find('[type=\"text\"]').type(\"HALFOFF\");\ncy.get(\".action-form\").submit().next().should(\"contain\", \"Your form has been submitted!\");",
              "err": {},
              "uuid": "038dbcb1-9eee-4415-b442-cbdebbbb24b1",
              "parentUUID": "c182fe5c-3f81-403d-a3bf-8726525063de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".click() - click on a DOM element",
              "fullTitle": "Actions .click() - click on a DOM element",
              "timedOut": null,
              "duration": 2821,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/click\ncy.get(\".action-btn\").click(); // You can click on 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// clicking in the center of the element is the default\ncy.get(\"#action-canvas\").click();\ncy.get(\"#action-canvas\").click(\"topLeft\");\ncy.get(\"#action-canvas\").click(\"top\");\ncy.get(\"#action-canvas\").click(\"topRight\");\ncy.get(\"#action-canvas\").click(\"left\");\ncy.get(\"#action-canvas\").click(\"right\");\ncy.get(\"#action-canvas\").click(\"bottomLeft\");\ncy.get(\"#action-canvas\").click(\"bottom\");\ncy.get(\"#action-canvas\").click(\"bottomRight\"); // .click() accepts an x and y coordinate\n// that controls where the click occurs :)\ncy.get(\"#action-canvas\").click(80, 75) // click 80px on x coord and 75px on y coord\n.click(170, 75).click(80, 165).click(100, 185).click(125, 190).click(150, 185).click(170, 165); // click multiple elements by passing multiple: true\ncy.get(\".action-labels>.label\").click({\n  multiple: true\n}); // Ignore error checking prior to clicking\ncy.get(\".action-opacity>.btn\").click({\n  force: true\n});",
              "err": {},
              "uuid": "61f9e9b1-e2c2-4e77-bc27-11cc5461d8b2",
              "parentUUID": "c182fe5c-3f81-403d-a3bf-8726525063de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".dblclick() - double click on a DOM element",
              "fullTitle": "Actions .dblclick() - double click on a DOM element",
              "timedOut": null,
              "duration": 239,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/dblclick\n// Our app has a listener on 'dblclick' event in our 'scripts.js'\n// that hides the div and shows an input on double click\ncy.get(\".action-div\").dblclick().should(\"not.be.visible\");\ncy.get(\".action-input-hidden\").should(\"be.visible\");",
              "err": {},
              "uuid": "a64567e3-43f7-4f05-9e3a-bdae3ab89103",
              "parentUUID": "c182fe5c-3f81-403d-a3bf-8726525063de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".rightclick() - right click on a DOM element",
              "fullTitle": "Actions .rightclick() - right click on a DOM element",
              "timedOut": null,
              "duration": 255,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/rightclick\n// Our app has a listener on 'contextmenu' event in our 'scripts.js'\n// that hides the div and shows an input on right click\ncy.get(\".rightclick-action-div\").rightclick().should(\"not.be.visible\");\ncy.get(\".rightclick-action-input-hidden\").should(\"be.visible\");",
              "err": {},
              "uuid": "797508d6-8875-4836-8a1f-e8457fe48165",
              "parentUUID": "c182fe5c-3f81-403d-a3bf-8726525063de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".check() - check a checkbox or radio element",
              "fullTitle": "Actions .check() - check a checkbox or radio element",
              "timedOut": null,
              "duration": 1017,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/check\n// By default, .check() will check all\n// matching checkbox or radio elements in succession, one after another\ncy.get('.action-checkboxes [type=\"checkbox\"]').not(\"[disabled]\").check().should(\"be.checked\");\ncy.get('.action-radios [type=\"radio\"]').not(\"[disabled]\").check().should(\"be.checked\"); // .check() accepts a value argument\ncy.get('.action-radios [type=\"radio\"]').check(\"radio1\").should(\"be.checked\"); // .check() accepts an array of values\ncy.get('.action-multiple-checkboxes [type=\"checkbox\"]').check([\"checkbox1\", \"checkbox2\"]).should(\"be.checked\"); // Ignore error checking prior to checking\ncy.get(\".action-checkboxes [disabled]\").check({\n  force: true\n}).should(\"be.checked\");\ncy.get('.action-radios [type=\"radio\"]').check(\"radio3\", {\n  force: true\n}).should(\"be.checked\");",
              "err": {},
              "uuid": "b75d5035-6ee5-4c83-b98b-5e83b43235fb",
              "parentUUID": "c182fe5c-3f81-403d-a3bf-8726525063de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".uncheck() - uncheck a checkbox element",
              "fullTitle": "Actions .uncheck() - uncheck a checkbox element",
              "timedOut": null,
              "duration": 994,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/uncheck\n// By default, .uncheck() will uncheck all matching\n// checkbox elements in succession, one after another\ncy.get('.action-check [type=\"checkbox\"]').not(\"[disabled]\").uncheck().should(\"not.be.checked\"); // .uncheck() accepts a value argument\ncy.get('.action-check [type=\"checkbox\"]').check(\"checkbox1\").uncheck(\"checkbox1\").should(\"not.be.checked\"); // .uncheck() accepts an array of values\ncy.get('.action-check [type=\"checkbox\"]').check([\"checkbox1\", \"checkbox3\"]).uncheck([\"checkbox1\", \"checkbox3\"]).should(\"not.be.checked\"); // Ignore error checking prior to unchecking\ncy.get(\".action-check [disabled]\").uncheck({\n  force: true\n}).should(\"not.be.checked\");",
              "err": {},
              "uuid": "8e2c2519-17dc-43d8-9fb2-527d96662561",
              "parentUUID": "c182fe5c-3f81-403d-a3bf-8726525063de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".select() - select an option in a <select> element",
              "fullTitle": "Actions .select() - select an option in a <select> element",
              "timedOut": null,
              "duration": 1031,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/select\n// at first, no option should be selected\ncy.get(\".action-select\").should(\"have.value\", \"--Select a fruit--\"); // Select option(s) with matching text content\ncy.get(\".action-select\").select(\"apples\"); // confirm the apples were selected\n// note that each value starts with \"fr-\" in our HTML\ncy.get(\".action-select\").should(\"have.value\", \"fr-apples\");\ncy.get(\".action-select-multiple\").select([\"apples\", \"oranges\", \"bananas\"]) // when getting multiple values, invoke \"val\" method first\n.invoke(\"val\").should(\"deep.equal\", [\"fr-apples\", \"fr-oranges\", \"fr-bananas\"]); // Select option(s) with matching value\ncy.get(\".action-select\").select(\"fr-bananas\") // can attach an assertion right away to the element\n.should(\"have.value\", \"fr-bananas\");\ncy.get(\".action-select-multiple\").select([\"fr-apples\", \"fr-oranges\", \"fr-bananas\"]).invoke(\"val\").should(\"deep.equal\", [\"fr-apples\", \"fr-oranges\", \"fr-bananas\"]); // assert the selected values include oranges\ncy.get(\".action-select-multiple\").invoke(\"val\").should(\"include\", \"fr-oranges\");",
              "err": {},
              "uuid": "2a9c2469-8619-4210-9af2-e050e54067e5",
              "parentUUID": "c182fe5c-3f81-403d-a3bf-8726525063de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".scrollIntoView() - scroll an element into view",
              "fullTitle": "Actions .scrollIntoView() - scroll an element into view",
              "timedOut": null,
              "duration": 163,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollintoview\n// normally all of these buttons are hidden,\n// because they're not within\n// the viewable area of their parent\n// (we need to scroll to see them)\ncy.get(\"#scroll-horizontal button\").should(\"not.be.visible\"); // scroll the button into view, as if the user had scrolled\ncy.get(\"#scroll-horizontal button\").scrollIntoView().should(\"be.visible\");\ncy.get(\"#scroll-vertical button\").should(\"not.be.visible\"); // Cypress handles the scroll direction needed\ncy.get(\"#scroll-vertical button\").scrollIntoView().should(\"be.visible\");\ncy.get(\"#scroll-both button\").should(\"not.be.visible\"); // Cypress knows to scroll to the right and down\ncy.get(\"#scroll-both button\").scrollIntoView().should(\"be.visible\");",
              "err": {},
              "uuid": "9133821c-75bb-46b2-bc87-0cfca1a546c7",
              "parentUUID": "c182fe5c-3f81-403d-a3bf-8726525063de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".trigger() - trigger an event on a DOM element",
              "fullTitle": "Actions .trigger() - trigger an event on a DOM element",
              "timedOut": null,
              "duration": 213,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/trigger\n// To interact with a range input (slider)\n// we need to set its value & trigger the\n// event to signal it changed\n// Here, we invoke jQuery's val() method to set\n// the value and trigger the 'change' event\ncy.get(\".trigger-input-range\").invoke(\"val\", 25).trigger(\"change\").get(\"input[type=range]\").siblings(\"p\").should(\"have.text\", \"25\");",
              "err": {},
              "uuid": "4b850f35-aa22-471f-a026-94056ac7f31f",
              "parentUUID": "c182fe5c-3f81-403d-a3bf-8726525063de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.scrollTo() - scroll the window or element to a position",
              "fullTitle": "Actions cy.scrollTo() - scroll the window or element to a position",
              "timedOut": null,
              "duration": 2121,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollto\n// You can scroll to 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// if you chain .scrollTo() off of cy, we will\n// scroll the entire window\ncy.scrollTo(\"bottom\");\ncy.get(\"#scrollable-horizontal\").scrollTo(\"right\"); // or you can scroll to a specific coordinate:\n// (x axis, y axis) in pixels\ncy.get(\"#scrollable-vertical\").scrollTo(250, 250); // or you can scroll to a specific percentage\n// of the (width, height) of the element\ncy.get(\"#scrollable-both\").scrollTo(\"75%\", \"25%\"); // control the easing of the scroll (default is 'swing')\ncy.get(\"#scrollable-vertical\").scrollTo(\"center\", {\n  easing: \"linear\"\n}); // control the duration of the scroll (in ms)\ncy.get(\"#scrollable-both\").scrollTo(\"center\", {\n  duration: 2000\n});",
              "err": {},
              "uuid": "03b606b0-ef72-4dfe-9813-82f92b49b2de",
              "parentUUID": "c182fe5c-3f81-403d-a3bf-8726525063de",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d553c61c-5005-4648-a819-b95b0a4ae32e",
            "17c7bb56-9c4f-4265-aaec-6172cfdd7081",
            "27807135-c9ba-4989-af9f-12a8c2d81fb2",
            "65a01056-04ed-4fbe-981f-32060934b9b0",
            "038dbcb1-9eee-4415-b442-cbdebbbb24b1",
            "61f9e9b1-e2c2-4e77-bc27-11cc5461d8b2",
            "a64567e3-43f7-4f05-9e3a-bdae3ab89103",
            "797508d6-8875-4836-8a1f-e8457fe48165",
            "b75d5035-6ee5-4c83-b98b-5e83b43235fb",
            "8e2c2519-17dc-43d8-9fb2-527d96662561",
            "2a9c2469-8619-4210-9af2-e050e54067e5",
            "9133821c-75bb-46b2-bc87-0cfca1a546c7",
            "4b850f35-aa22-471f-a026-94056ac7f31f",
            "03b606b0-ef72-4dfe-9813-82f92b49b2de"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16287,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3a582784-a043-43a2-96a8-b274a9926fbb",
      "title": "",
      "fullFile": "cypress/integration/examples/aliasing.spec.js",
      "file": "cypress/integration/examples/aliasing.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "08e58f08-ee29-4a2d-bdc0-b03097ddc6af",
          "title": "Aliasing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".as() - alias a DOM element for later use",
              "fullTitle": "Aliasing .as() - alias a DOM element for later use",
              "timedOut": null,
              "duration": 629,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/as\n// Alias a DOM element for use later\n// We don't have to traverse to the element\n// later in our code, we reference it with @\ncy.get(\".as-table\").find(\"tbody>tr\").first().find(\"td\").first().find(\"button\").as(\"firstBtn\"); // when we reference the alias, we place an\n// @ in front of its name\ncy.get(\"@firstBtn\").click();\ncy.get(\"@firstBtn\").should(\"have.class\", \"btn-success\").and(\"contain\", \"Changed\");",
              "err": {},
              "uuid": "9dd54cd1-3373-4f13-8f26-f9b1d9e490c4",
              "parentUUID": "08e58f08-ee29-4a2d-bdc0-b03097ddc6af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".as() - alias a route for later use",
              "fullTitle": "Aliasing .as() - alias a route for later use",
              "timedOut": null,
              "duration": 1249,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Alias the route to wait for its response\ncy.intercept(\"GET\", \"**/comments/*\").as(\"getComment\"); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get(\".network-btn\").click(); // https://on.cypress.io/wait\ncy.wait(\"@getComment\").its(\"response.statusCode\").should(\"eq\", 200);",
              "err": {},
              "uuid": "54f83808-ad78-496d-b3da-3852d590796d",
              "parentUUID": "08e58f08-ee29-4a2d-bdc0-b03097ddc6af",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9dd54cd1-3373-4f13-8f26-f9b1d9e490c4",
            "54f83808-ad78-496d-b3da-3852d590796d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1878,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e1a07599-2e6b-4b6d-8816-77a8f6576eed",
      "title": "",
      "fullFile": "cypress/integration/examples/assertions.spec.js",
      "file": "cypress/integration/examples/assertions.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5e609e72-e7cc-40ed-87da-70b051486659",
          "title": "Assertions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "fcc2d557-5ee6-4c32-b466-fc6180c3a8d2",
              "title": "Implicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".should() - make an assertion about the current subject",
                  "fullTitle": "Assertions Implicit Assertions .should() - make an assertion about the current subject",
                  "timedOut": null,
                  "duration": 1987,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/should\ncy.get(\".assertion-table\").find(\"tbody tr:last\").should(\"have.class\", \"success\").find(\"td\").first() // checking the text of the <td> element in various ways\n.should(\"have.text\", \"Column content\").should(\"contain\", \"Column content\").should(\"have.html\", \"Column content\") // chai-jquery uses \"is()\" to check if element matches selector\n.should(\"match\", \"td\") // to match text content against a regular expression\n// first need to invoke jQuery method text()\n// and then match using regular expression\n.invoke(\"text\").should(\"match\", /column content/i); // a better way to check element's text content against a regular expression\n// is to use \"cy.contains\"\n// https://on.cypress.io/contains\ncy.get(\".assertion-table\").find(\"tbody tr:last\") // finds first <td> element with text content matching regular expression\n.contains(\"td\", /column content/i).should(\"be.visible\"); // for more information about asserting element's text\n// see https://on.cypress.io/using-cypress-faq#How-do-I-get-an-element’s-text-contents",
                  "err": {},
                  "uuid": "cd419790-9460-4bbb-b4ce-565938480058",
                  "parentUUID": "fcc2d557-5ee6-4c32-b466-fc6180c3a8d2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": ".and() - chain multiple assertions together",
                  "fullTitle": "Assertions Implicit Assertions .and() - chain multiple assertions together",
                  "timedOut": null,
                  "duration": 246,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/and\ncy.get(\".assertions-link\").should(\"have.class\", \"active\").and(\"have.attr\", \"href\").and(\"include\", \"cypress.io\");",
                  "err": {},
                  "uuid": "8e7f00e2-8d1f-4346-8226-433aee6ba047",
                  "parentUUID": "fcc2d557-5ee6-4c32-b466-fc6180c3a8d2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cd419790-9460-4bbb-b4ce-565938480058",
                "8e7f00e2-8d1f-4346-8226-433aee6ba047"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2233,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "774a55b0-90a0-4c8a-9959-d2080d649d5f",
              "title": "Explicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "expect - make an assertion about a specified subject",
                  "fullTitle": "Assertions Explicit Assertions expect - make an assertion about a specified subject",
                  "timedOut": null,
                  "duration": 148,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// We can use Chai's BDD style assertions\nexpect(true).to.be[\"true\"];\nvar o = {\n  foo: \"bar\"\n};\nexpect(o).to.equal(o);\nexpect(o).to.deep.equal({\n  foo: \"bar\"\n}); // matching text using regular expression\nexpect(\"FooBar\").to.match(/bar$/i);",
                  "err": {},
                  "uuid": "cd77f260-f5e1-4aa4-9d6c-fde52b09c667",
                  "parentUUID": "774a55b0-90a0-4c8a-9959-d2080d649d5f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "pass your own callback function to should()",
                  "fullTitle": "Assertions Explicit Assertions pass your own callback function to should()",
                  "timedOut": null,
                  "duration": 113,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Pass a function to should that can have any number\n// of explicit assertions within it.\n// The \".should(cb)\" function will be retried\n// automatically until it passes all your explicit assertions or times out.\ncy.get(\".assertions-p\").find(\"p\").should(function ($p) {\n  // https://on.cypress.io/$\n  // return an array of texts from all of the p's\n  // @ts-ignore TS6133 unused variable\n  var texts = $p.map(function (i, el) {\n    return Cypress.$(el).text();\n  }); // jquery map returns jquery object\n  // and .get() convert this to simple array\n  var paragraphs = texts.get(); // array should have length of 3\n  expect(paragraphs, \"has 3 paragraphs\").to.have.length(3); // use second argument to expect(...) to provide clear\n  // message with each assertion\n  expect(paragraphs, \"has expected text in each paragraph\").to.deep.eq([\"Some text from first p\", \"More text from second p\", \"And even more text from third p\"]);\n});",
                  "err": {},
                  "uuid": "104d1ded-9132-49ad-9d70-df4112ff5cbe",
                  "parentUUID": "774a55b0-90a0-4c8a-9959-d2080d649d5f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "finds element by class name regex",
                  "fullTitle": "Assertions Explicit Assertions finds element by class name regex",
                  "timedOut": null,
                  "duration": 124,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get(\".docs-header\").find(\"div\") // .should(cb) callback function will be retried\n.should(function ($div) {\n  expect($div).to.have.length(1);\n  var className = $div[0].className;\n  expect(className).to.match(/heading-/);\n}) // .then(cb) callback is not retried,\n// it either passes or fails\n.then(function ($div) {\n  expect($div, \"text content\").to.have.text(\"Introduction\");\n});",
                  "err": {},
                  "uuid": "2ad278cd-c9ae-451c-a0b1-faa18b05185b",
                  "parentUUID": "774a55b0-90a0-4c8a-9959-d2080d649d5f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can throw any error",
                  "fullTitle": "Assertions Explicit Assertions can throw any error",
                  "timedOut": null,
                  "duration": 194,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get(\".docs-header\").find(\"div\").should(function ($div) {\n  if ($div.length !== 1) {\n    // you can throw your own errors\n    throw new Error(\"Did not find 1 element\");\n  }\n  var className = $div[0].className;\n  if (!className.match(/heading-/)) {\n    throw new Error(\"Could not find class \\\"heading-\\\" in \".concat(className));\n  }\n});",
                  "err": {},
                  "uuid": "bc5d2831-2947-4cd2-98e0-25f108998989",
                  "parentUUID": "774a55b0-90a0-4c8a-9959-d2080d649d5f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "matches unknown text between two elements",
                  "fullTitle": "Assertions Explicit Assertions matches unknown text between two elements",
                  "timedOut": null,
                  "duration": 198,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "/**\n * Text from the first element.\n * @type {string}\n */\nvar text;\n/**\n * Normalizes passed text,\n * useful before comparing text with spaces and different capitalization.\n * @param {string} s Text to normalize\n */\nvar normalizeText = function normalizeText(s) {\n  return s.replace(/\\s/g, \"\").toLowerCase();\n};\ncy.get(\".two-elements\").find(\".first\").then(function ($first) {\n  // save text from the first element\n  text = normalizeText($first.text());\n});\ncy.get(\".two-elements\").find(\".second\").should(function ($div) {\n  // we can massage text before comparing\n  var secondText = normalizeText($div.text());\n  expect(secondText, \"second text\").to.equal(text);\n});",
                  "err": {},
                  "uuid": "862bbee9-afc2-42a5-9240-d367d2df0179",
                  "parentUUID": "774a55b0-90a0-4c8a-9959-d2080d649d5f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "assert - assert shape of an object",
                  "fullTitle": "Assertions Explicit Assertions assert - assert shape of an object",
                  "timedOut": null,
                  "duration": 155,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var person = {\n  name: \"Joe\",\n  age: 20\n};\nassert.isObject(person, \"value is object\");",
                  "err": {},
                  "uuid": "21e1084a-e2d6-49f9-afef-126286f53339",
                  "parentUUID": "774a55b0-90a0-4c8a-9959-d2080d649d5f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "retries the should callback until assertions pass",
                  "fullTitle": "Assertions Explicit Assertions retries the should callback until assertions pass",
                  "timedOut": null,
                  "duration": 1615,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get(\"#random-number\").should(function ($div) {\n  var n = parseFloat($div.text());\n  expect(n).to.be.gte(1).and.be.lte(10);\n});",
                  "err": {},
                  "uuid": "0fcb8ffb-477d-4be6-ab74-67ab78cfc96b",
                  "parentUUID": "774a55b0-90a0-4c8a-9959-d2080d649d5f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cd77f260-f5e1-4aa4-9d6c-fde52b09c667",
                "104d1ded-9132-49ad-9d70-df4112ff5cbe",
                "2ad278cd-c9ae-451c-a0b1-faa18b05185b",
                "bc5d2831-2947-4cd2-98e0-25f108998989",
                "862bbee9-afc2-42a5-9240-d367d2df0179",
                "21e1084a-e2d6-49f9-afef-126286f53339",
                "0fcb8ffb-477d-4be6-ab74-67ab78cfc96b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2547,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "58c58ea6-69a7-4383-b62c-97b312ab00fc",
      "title": "",
      "fullFile": "cypress/integration/examples/connectors.spec.js",
      "file": "cypress/integration/examples/connectors.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "eb1724b0-69d5-4584-a761-3aa5cd5e7f84",
          "title": "Connectors",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".each() - iterate over an array of elements",
              "fullTitle": "Connectors .each() - iterate over an array of elements",
              "timedOut": null,
              "duration": 466,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/each\ncy.get(\".connectors-each-ul>li\").each(function ($el, index, $list) {\n  console.log($el, index, $list);\n});",
              "err": {},
              "uuid": "abc4c6da-75e5-42c5-898d-bff61b4e5139",
              "parentUUID": "eb1724b0-69d5-4584-a761-3aa5cd5e7f84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".its() - get properties on the current subject",
              "fullTitle": "Connectors .its() - get properties on the current subject",
              "timedOut": null,
              "duration": 185,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/its\ncy.get(\".connectors-its-ul>li\") // calls the 'length' property yielding that value\n.its(\"length\").should(\"be.gt\", 2);",
              "err": {},
              "uuid": "8cf173d7-3c0f-4a1a-9e06-9a2491451d0e",
              "parentUUID": "eb1724b0-69d5-4584-a761-3aa5cd5e7f84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".invoke() - invoke a function on the current subject",
              "fullTitle": "Connectors .invoke() - invoke a function on the current subject",
              "timedOut": null,
              "duration": 128,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// our div is hidden in our script.js\n// $('.connectors-div').hide()\n// https://on.cypress.io/invoke\ncy.get(\".connectors-div\").should(\"be.hidden\") // call the jquery method 'show' on the 'div.container'\n.invoke(\"show\").should(\"be.visible\");",
              "err": {},
              "uuid": "b1beda9f-dd6d-4e52-b9ae-a6bd4b31c4f9",
              "parentUUID": "eb1724b0-69d5-4584-a761-3aa5cd5e7f84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".spread() - spread an array as individual args to callback function",
              "fullTitle": "Connectors .spread() - spread an array as individual args to callback function",
              "timedOut": null,
              "duration": 124,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spread\nvar arr = [\"foo\", \"bar\", \"baz\"];\ncy.wrap(arr).spread(function (foo, bar, baz) {\n  expect(foo).to.eq(\"foo\");\n  expect(bar).to.eq(\"bar\");\n  expect(baz).to.eq(\"baz\");\n});",
              "err": {},
              "uuid": "6db72342-0507-4f81-8261-cca9f1ff4f89",
              "parentUUID": "eb1724b0-69d5-4584-a761-3aa5cd5e7f84",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "5447d6b1-72d0-42b5-b36a-82a03ac12d85",
              "title": ".then()",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "invokes a callback function with the current subject",
                  "fullTitle": "Connectors .then() invokes a callback function with the current subject",
                  "timedOut": null,
                  "duration": 126,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/then\ncy.get(\".connectors-list > li\").then(function ($lis) {\n  expect($lis, \"3 items\").to.have.length(3);\n  expect($lis.eq(0), \"first item\").to.contain(\"Walk the dog\");\n  expect($lis.eq(1), \"second item\").to.contain(\"Feed the cat\");\n  expect($lis.eq(2), \"third item\").to.contain(\"Write JavaScript\");\n});",
                  "err": {},
                  "uuid": "768109e2-3524-430d-8ade-6b6db9ee0678",
                  "parentUUID": "5447d6b1-72d0-42b5-b36a-82a03ac12d85",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the returned value to the next command",
                  "fullTitle": "Connectors .then() yields the returned value to the next command",
                  "timedOut": null,
                  "duration": 184,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(function (num) {\n  expect(num).to.equal(1);\n  return 2;\n}).then(function (num) {\n  expect(num).to.equal(2);\n});",
                  "err": {},
                  "uuid": "7008e33b-8038-4a57-ab3a-a3cb37f94092",
                  "parentUUID": "5447d6b1-72d0-42b5-b36a-82a03ac12d85",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the original subject without return",
                  "fullTitle": "Connectors .then() yields the original subject without return",
                  "timedOut": null,
                  "duration": 161,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(function (num) {\n  expect(num).to.equal(1); // note that nothing is returned from this callback\n}).then(function (num) {\n  // this callback receives the original unchanged value 1\n  expect(num).to.equal(1);\n});",
                  "err": {},
                  "uuid": "def1a5f6-91f2-43a5-a962-a1d867f09ec9",
                  "parentUUID": "5447d6b1-72d0-42b5-b36a-82a03ac12d85",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the value yielded by the last Cypress command inside",
                  "fullTitle": "Connectors .then() yields the value yielded by the last Cypress command inside",
                  "timedOut": null,
                  "duration": 149,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(function (num) {\n  expect(num).to.equal(1); // note how we run a Cypress command\n  // the result yielded by this Cypress command\n  // will be passed to the second \".then\"\n  cy.wrap(2);\n}).then(function (num) {\n  // this callback receives the value yielded by \"cy.wrap(2)\"\n  expect(num).to.equal(2);\n});",
                  "err": {},
                  "uuid": "1c1277da-7ec3-4392-900e-c330e9baa1da",
                  "parentUUID": "5447d6b1-72d0-42b5-b36a-82a03ac12d85",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "768109e2-3524-430d-8ade-6b6db9ee0678",
                "7008e33b-8038-4a57-ab3a-a3cb37f94092",
                "def1a5f6-91f2-43a5-a962-a1d867f09ec9",
                "1c1277da-7ec3-4392-900e-c330e9baa1da"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 620,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "abc4c6da-75e5-42c5-898d-bff61b4e5139",
            "8cf173d7-3c0f-4a1a-9e06-9a2491451d0e",
            "b1beda9f-dd6d-4e52-b9ae-a6bd4b31c4f9",
            "6db72342-0507-4f81-8261-cca9f1ff4f89"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 903,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f13a4309-c12b-4de2-b379-ece9de265319",
      "title": "",
      "fullFile": "cypress/integration/examples/cookies.spec.js",
      "file": "cypress/integration/examples/cookies.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "495b1c6b-4d8c-4b6c-8e73-ff7f1e9d0f25",
          "title": "Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.getCookie() - get a browser cookie",
              "fullTitle": "Cookies cy.getCookie() - get a browser cookie",
              "timedOut": null,
              "duration": 674,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getcookie\ncy.get(\"#getCookie .set-a-cookie\").click(); // cy.getCookie() yields a cookie object\ncy.getCookie(\"token\").should(\"have.property\", \"value\", \"123ABC\");",
              "err": {},
              "uuid": "3de76f41-04cb-484e-86c9-cd473d4ed54e",
              "parentUUID": "495b1c6b-4d8c-4b6c-8e73-ff7f1e9d0f25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.getCookies() - get browser cookies",
              "fullTitle": "Cookies cy.getCookies() - get browser cookies",
              "timedOut": null,
              "duration": 297,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getcookies\ncy.getCookies().should(\"be.empty\");\ncy.get(\"#getCookies .set-a-cookie\").click(); // cy.getCookies() yields an array of cookies\ncy.getCookies().should(\"have.length\", 1).should(function (cookies) {\n  // each cookie has these properties\n  expect(cookies[0]).to.have.property(\"name\", \"token\");\n  expect(cookies[0]).to.have.property(\"value\", \"123ABC\");\n  expect(cookies[0]).to.have.property(\"httpOnly\", false);\n  expect(cookies[0]).to.have.property(\"secure\", false);\n  expect(cookies[0]).to.have.property(\"domain\");\n  expect(cookies[0]).to.have.property(\"path\");\n});",
              "err": {},
              "uuid": "ff2f3eaa-afed-48b7-9ef1-65432bef5545",
              "parentUUID": "495b1c6b-4d8c-4b6c-8e73-ff7f1e9d0f25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.setCookie() - set a browser cookie",
              "fullTitle": "Cookies cy.setCookie() - set a browser cookie",
              "timedOut": null,
              "duration": 141,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/setcookie\ncy.getCookies().should(\"be.empty\");\ncy.setCookie(\"foo\", \"bar\"); // cy.getCookie() yields a cookie object\ncy.getCookie(\"foo\").should(\"have.property\", \"value\", \"bar\");",
              "err": {},
              "uuid": "29523ff6-9a72-4d83-b165-d94e03176f63",
              "parentUUID": "495b1c6b-4d8c-4b6c-8e73-ff7f1e9d0f25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookie() - clear a browser cookie",
              "fullTitle": "Cookies cy.clearCookie() - clear a browser cookie",
              "timedOut": null,
              "duration": 244,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearcookie\ncy.getCookie(\"token\").should(\"be.null\");\ncy.get(\"#clearCookie .set-a-cookie\").click();\ncy.getCookie(\"token\").should(\"have.property\", \"value\", \"123ABC\"); // cy.clearCookies() yields null\ncy.clearCookie(\"token\").should(\"be.null\");\ncy.getCookie(\"token\").should(\"be.null\");",
              "err": {},
              "uuid": "d350a6f0-d3c0-42d1-adfc-dc8a365959d6",
              "parentUUID": "495b1c6b-4d8c-4b6c-8e73-ff7f1e9d0f25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookies() - clear browser cookies",
              "fullTitle": "Cookies cy.clearCookies() - clear browser cookies",
              "timedOut": null,
              "duration": 202,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearcookies\ncy.getCookies().should(\"be.empty\");\ncy.get(\"#clearCookies .set-a-cookie\").click();\ncy.getCookies().should(\"have.length\", 1); // cy.clearCookies() yields null\ncy.clearCookies();\ncy.getCookies().should(\"be.empty\");",
              "err": {},
              "uuid": "c23f07eb-fd83-4537-96f3-65042d01eaa2",
              "parentUUID": "495b1c6b-4d8c-4b6c-8e73-ff7f1e9d0f25",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3de76f41-04cb-484e-86c9-cd473d4ed54e",
            "ff2f3eaa-afed-48b7-9ef1-65432bef5545",
            "29523ff6-9a72-4d83-b165-d94e03176f63",
            "d350a6f0-d3c0-42d1-adfc-dc8a365959d6",
            "c23f07eb-fd83-4537-96f3-65042d01eaa2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1558,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "88e1663e-ef00-4485-b54c-dc48fc4feb25",
      "title": "",
      "fullFile": "cypress/integration/examples/cypress_api.spec.js",
      "file": "cypress/integration/examples/cypress_api.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a70310df-e908-4741-92bb-b99a91af3519",
          "title": "Cypress.Commands",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".add() - create a custom command",
              "fullTitle": "Cypress.Commands .add() - create a custom command",
              "timedOut": null,
              "duration": 406,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Commands.add(\"console\", {\n  prevSubject: true\n}, function (subject, method) {\n  // the previous subject is automatically received\n  // and the commands arguments are shifted\n  // allow us to change the console method used\n  method = method || \"log\"; // log the subject to the console\n  // @ts-ignore TS7017\n  console[method](\"The subject is\", subject); // whatever we return becomes the new subject\n  // we don't want to change the subject so\n  // we return whatever was passed in\n  return subject;\n}); // @ts-ignore TS2339\ncy.get(\"button\").console(\"info\").then(function ($button) {// subject is still $button\n});",
              "err": {},
              "uuid": "78be1ee2-5d41-4e13-8214-035437f188a9",
              "parentUUID": "a70310df-e908-4741-92bb-b99a91af3519",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "78be1ee2-5d41-4e13-8214-035437f188a9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 406,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "daf53051-b4ff-4225-b7c9-96f31e74e256",
          "title": "Cypress.Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".debug() - enable or disable debugging",
              "fullTitle": "Cypress.Cookies .debug() - enable or disable debugging",
              "timedOut": null,
              "duration": 305,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Cookies.debug(true); // Cypress will now log in the console when\n// cookies are set or cleared\ncy.setCookie(\"fakeCookie\", \"123ABC\");\ncy.clearCookie(\"fakeCookie\");\ncy.setCookie(\"fakeCookie\", \"123ABC\");\ncy.clearCookie(\"fakeCookie\");\ncy.setCookie(\"fakeCookie\", \"123ABC\");",
              "err": {},
              "uuid": "5e296cef-8375-4877-b32d-7affacb99038",
              "parentUUID": "daf53051-b4ff-4225-b7c9-96f31e74e256",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".preserveOnce() - preserve cookies by key",
              "fullTitle": "Cypress.Cookies .preserveOnce() - preserve cookies by key",
              "timedOut": null,
              "duration": 131,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// normally cookies are reset after each test\ncy.getCookie(\"fakeCookie\").should(\"not.be.ok\"); // preserving a cookie will not clear it when\n// the next test starts\ncy.setCookie(\"lastCookie\", \"789XYZ\");\nCypress.Cookies.preserveOnce(\"lastCookie\");",
              "err": {},
              "uuid": "0d152744-83f8-4e4a-9a8d-6acdcc92fd31",
              "parentUUID": "daf53051-b4ff-4225-b7c9-96f31e74e256",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".defaults() - set defaults for all cookies",
              "fullTitle": "Cypress.Cookies .defaults() - set defaults for all cookies",
              "timedOut": null,
              "duration": 109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// now any cookie with the name 'session_id' will\n// not be cleared before each new test runs\nCypress.Cookies.defaults({\n  preserve: \"session_id\"\n});",
              "err": {},
              "uuid": "12228fd8-e598-4649-836e-edfdcaa5939f",
              "parentUUID": "daf53051-b4ff-4225-b7c9-96f31e74e256",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5e296cef-8375-4877-b32d-7affacb99038",
            "0d152744-83f8-4e4a-9a8d-6acdcc92fd31",
            "12228fd8-e598-4649-836e-edfdcaa5939f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 545,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3e84f4a3-9237-4d50-8f2c-edf5f0f4ea27",
          "title": "Cypress.arch",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get CPU architecture name of underlying OS",
              "fullTitle": "Cypress.arch Get CPU architecture name of underlying OS",
              "timedOut": null,
              "duration": 93,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/arch\nexpect(Cypress.arch).to.exist;",
              "err": {},
              "uuid": "37e5c823-5a38-4494-a975-b26edea83df6",
              "parentUUID": "3e84f4a3-9237-4d50-8f2c-edf5f0f4ea27",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "37e5c823-5a38-4494-a975-b26edea83df6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 93,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "28c2bbb5-c15f-4b7a-9f45-7497ddb75f2d",
          "title": "Cypress.config()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get and set configuration options",
              "fullTitle": "Cypress.config() Get and set configuration options",
              "timedOut": null,
              "duration": 1115,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/config\nvar myConfig = Cypress.config();\nexpect(myConfig).to.have.property(\"animationDistanceThreshold\", 5);\nexpect(myConfig).to.have.property(\"baseUrl\", null);\nexpect(myConfig).to.have.property(\"defaultCommandTimeout\", 4000);\nexpect(myConfig).to.have.property(\"requestTimeout\", 5000);\nexpect(myConfig).to.have.property(\"responseTimeout\", 30000);\nexpect(myConfig).to.have.property(\"viewportHeight\", 660);\nexpect(myConfig).to.have.property(\"viewportWidth\", 1000);\nexpect(myConfig).to.have.property(\"pageLoadTimeout\", 60000);\nexpect(myConfig).to.have.property(\"waitForAnimations\", true);\nexpect(Cypress.config(\"pageLoadTimeout\")).to.eq(60000); // this will change the config for the rest of your tests!\nCypress.config(\"pageLoadTimeout\", 20000);\nexpect(Cypress.config(\"pageLoadTimeout\")).to.eq(20000);\nCypress.config(\"pageLoadTimeout\", 60000);",
              "err": {
                "message": "AssertionError: expected { Object (baseUrl, retries, ...) } to have property 'baseUrl' of null, but got 'https://react-redux.realworld.io'",
                "estack": "AssertionError: expected { Object (baseUrl, retries, ...) } to have property 'baseUrl' of null, but got 'https://react-redux.realworld.io'\n    at Context.eval (https://example.cypress.io/__cypress/tests?p=cypress/integration/examples/cypress_api.spec.js:79:30)",
                "diff": null
              },
              "uuid": "d30b2ea3-01cf-445c-9c29-7b7082378055",
              "parentUUID": "28c2bbb5-c15f-4b7a-9f45-7497ddb75f2d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d30b2ea3-01cf-445c-9c29-7b7082378055"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1115,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "21ebec98-5ff8-4bcc-bfea-2fc40e024601",
          "title": "Cypress.dom",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".isHidden() - determine if a DOM element is hidden",
              "fullTitle": "Cypress.dom .isHidden() - determine if a DOM element is hidden",
              "timedOut": null,
              "duration": 132,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var hiddenP = Cypress.$(\".dom-p p.hidden\").get(0);\nvar visibleP = Cypress.$(\".dom-p p.visible\").get(0); // our first paragraph has css class 'hidden'\nexpect(Cypress.dom.isHidden(hiddenP)).to.be[\"true\"];\nexpect(Cypress.dom.isHidden(visibleP)).to.be[\"false\"];",
              "err": {},
              "uuid": "045dd918-3b5a-4f43-8947-58823375e926",
              "parentUUID": "21ebec98-5ff8-4bcc-bfea-2fc40e024601",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "045dd918-3b5a-4f43-8947-58823375e926"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 132,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7da18cf3-8c63-4ddd-9c54-89796f7f368b",
          "title": "Cypress.env()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get environment variables",
              "fullTitle": "Cypress.env() Get environment variables",
              "timedOut": null,
              "duration": 145,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/env\n// set multiple environment variables\nCypress.env({\n  host: \"veronica.dev.local\",\n  api_server: \"http://localhost:8888/v1/\"\n}); // get environment variable\nexpect(Cypress.env(\"host\")).to.eq(\"veronica.dev.local\"); // set environment variable\nCypress.env(\"api_server\", \"http://localhost:8888/v2/\");\nexpect(Cypress.env(\"api_server\")).to.eq(\"http://localhost:8888/v2/\"); // get all environment variable\nexpect(Cypress.env()).to.have.property(\"host\", \"veronica.dev.local\");\nexpect(Cypress.env()).to.have.property(\"api_server\", \"http://localhost:8888/v2/\");",
              "err": {},
              "uuid": "0119aa0f-7b6e-4cd7-8288-4c61d675d32a",
              "parentUUID": "7da18cf3-8c63-4ddd-9c54-89796f7f368b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0119aa0f-7b6e-4cd7-8288-4c61d675d32a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 145,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6698b9a6-84fa-44b5-855b-09a322e0fa6a",
          "title": "Cypress.log",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Control what is printed to the Command Log",
              "fullTitle": "Cypress.log Control what is printed to the Command Log",
              "timedOut": null,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/cypress-log",
              "err": {},
              "uuid": "8dd89789-f986-4944-b23e-6943411aefa2",
              "parentUUID": "6698b9a6-84fa-44b5-855b-09a322e0fa6a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8dd89789-f986-4944-b23e-6943411aefa2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 114,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6805ba2a-75fd-4bd5-9c4c-96e72f1adee2",
          "title": "Cypress.platform",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get underlying OS name",
              "fullTitle": "Cypress.platform Get underlying OS name",
              "timedOut": null,
              "duration": 117,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/platform\nexpect(Cypress.platform).to.be.exist;",
              "err": {},
              "uuid": "c5acb08f-8018-447c-b5f9-96c66f40b007",
              "parentUUID": "6805ba2a-75fd-4bd5-9c4c-96e72f1adee2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c5acb08f-8018-447c-b5f9-96c66f40b007"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 117,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e85f0adf-a53c-4f3d-b31d-e3d5f2a9c5bf",
          "title": "Cypress.version",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current version of Cypress being run",
              "fullTitle": "Cypress.version Get current version of Cypress being run",
              "timedOut": null,
              "duration": 115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/version\nexpect(Cypress.version).to.be.exist;",
              "err": {},
              "uuid": "70149ff9-bf8b-4c03-afb1-b8d9892b2316",
              "parentUUID": "e85f0adf-a53c-4f3d-b31d-e3d5f2a9c5bf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "70149ff9-bf8b-4c03-afb1-b8d9892b2316"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 115,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f855af84-eb3d-4322-b61e-cfbc1138059e",
          "title": "Cypress.spec",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current spec information",
              "fullTitle": "Cypress.spec Get current spec information",
              "timedOut": null,
              "duration": 186,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spec\n// wrap the object so we can inspect it easily by clicking in the command log\ncy.wrap(Cypress.spec).should(\"include.keys\", [\"name\", \"relative\", \"absolute\"]);",
              "err": {},
              "uuid": "f1bcc1cc-6b4b-4335-b7cd-b87bd9f71c74",
              "parentUUID": "f855af84-eb3d-4322-b61e-cfbc1138059e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f1bcc1cc-6b4b-4335-b7cd-b87bd9f71c74"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 186,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1d75dd6e-163b-4db4-93d8-217d5a6056c3",
      "title": "",
      "fullFile": "cypress/integration/examples/files.spec.js",
      "file": "cypress/integration/examples/files.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "092adee1-e69a-4ead-be8b-f52f603f1e54",
          "title": "Files",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.fixture() - load a fixture",
              "fullTitle": "Files cy.fixture() - load a fixture",
              "timedOut": null,
              "duration": 812,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/fixture\n// Instead of writing a response inline you can\n// use a fixture file's content.\n// when application makes an Ajax request matching \"GET **/comments/*\"\n// Cypress will intercept it and reply with the object in `example.json` fixture\ncy.intercept(\"GET\", \"**/comments/*\", {\n  fixture: \"example.json\"\n}).as(\"getComment\"); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get(\".fixture-btn\").click();\ncy.wait(\"@getComment\").its(\"response.body\").should(\"have.property\", \"name\").and(\"include\", \"Using fixtures to represent data\");",
              "err": {},
              "uuid": "c5f99113-68e6-406e-93e6-ffee6b26b79e",
              "parentUUID": "092adee1-e69a-4ead-be8b-f52f603f1e54",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.fixture() or require - load a fixture",
              "fullTitle": "Files cy.fixture() or require - load a fixture",
              "timedOut": null,
              "duration": 209,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// we are inside the \"function () { ... }\"\n// callback and can use test context object \"this\"\n// \"this.example\" was loaded in \"beforeEach\" function callback\nexpect(this.example, \"fixture in the test context\").to.deep.equal(requiredExample); // or use \"cy.wrap\" and \"should('deep.equal', ...)\" assertion\n// @ts-ignore\ncy.wrap(this.example, \"fixture vs require\").should(\"deep.equal\", requiredExample);",
              "err": {},
              "uuid": "1cbe053b-5449-4014-be85-640ebe50731f",
              "parentUUID": "092adee1-e69a-4ead-be8b-f52f603f1e54",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.readFile() - read file contents",
              "fullTitle": "Files cy.readFile() - read file contents",
              "timedOut": null,
              "duration": 108,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/readfile\n// You can read a file and yield its contents\n// The filePath is relative to your project's root.\ncy.readFile(\"cypress.json\").then(function (json) {\n  expect(json).to.be.an(\"object\");\n});",
              "err": {},
              "uuid": "64172da3-f5d3-4a81-a7ce-81b2aeb81097",
              "parentUUID": "092adee1-e69a-4ead-be8b-f52f603f1e54",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.writeFile() - write to a file",
              "fullTitle": "Files cy.writeFile() - write to a file",
              "timedOut": null,
              "duration": 928,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/writefile\n// You can write to a file\n// Use a response from a request to automatically\n// generate a fixture file for use later\ncy.request(\"https://jsonplaceholder.cypress.io/users\").then(function (response) {\n  cy.writeFile(\"cypress/fixtures/users.json\", response.body);\n});\ncy.fixture(\"users\").should(function (users) {\n  expect(users[0].name).to.exist;\n}); // JavaScript arrays and objects are stringified\n// and formatted into text.\ncy.writeFile(\"cypress/fixtures/profile.json\", {\n  id: 8739,\n  name: \"Jane\",\n  email: \"jane@example.com\"\n});\ncy.fixture(\"profile\").should(function (profile) {\n  expect(profile.name).to.eq(\"Jane\");\n});",
              "err": {},
              "uuid": "26255ec8-fcff-4e21-a46c-7f328caf7c67",
              "parentUUID": "092adee1-e69a-4ead-be8b-f52f603f1e54",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c5f99113-68e6-406e-93e6-ffee6b26b79e",
            "1cbe053b-5449-4014-be85-640ebe50731f",
            "64172da3-f5d3-4a81-a7ce-81b2aeb81097",
            "26255ec8-fcff-4e21-a46c-7f328caf7c67"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2057,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "25d93d50-ad58-4ef8-be61-af86e8369356",
      "title": "",
      "fullFile": "cypress/integration/examples/local_storage.spec.js",
      "file": "cypress/integration/examples/local_storage.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d225576f-dd90-4604-b15a-ac02517244f0",
          "title": "Local Storage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.clearLocalStorage() - clear all data in local storage",
              "fullTitle": "Local Storage cy.clearLocalStorage() - clear all data in local storage",
              "timedOut": null,
              "duration": 968,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearlocalstorage\ncy.get(\".ls-btn\").click().should(function () {\n  expect(localStorage.getItem(\"prop1\")).to.eq(\"red\");\n  expect(localStorage.getItem(\"prop2\")).to.eq(\"blue\");\n  expect(localStorage.getItem(\"prop3\")).to.eq(\"magenta\");\n}); // clearLocalStorage() yields the localStorage object\ncy.clearLocalStorage().should(function (ls) {\n  expect(ls.getItem(\"prop1\")).to.be[\"null\"];\n  expect(ls.getItem(\"prop2\")).to.be[\"null\"];\n  expect(ls.getItem(\"prop3\")).to.be[\"null\"];\n}); // Clear key matching string in Local Storage\ncy.get(\".ls-btn\").click().should(function () {\n  expect(localStorage.getItem(\"prop1\")).to.eq(\"red\");\n  expect(localStorage.getItem(\"prop2\")).to.eq(\"blue\");\n  expect(localStorage.getItem(\"prop3\")).to.eq(\"magenta\");\n});\ncy.clearLocalStorage(\"prop1\").should(function (ls) {\n  expect(ls.getItem(\"prop1\")).to.be[\"null\"];\n  expect(ls.getItem(\"prop2\")).to.eq(\"blue\");\n  expect(ls.getItem(\"prop3\")).to.eq(\"magenta\");\n}); // Clear keys matching regex in Local Storage\ncy.get(\".ls-btn\").click().should(function () {\n  expect(localStorage.getItem(\"prop1\")).to.eq(\"red\");\n  expect(localStorage.getItem(\"prop2\")).to.eq(\"blue\");\n  expect(localStorage.getItem(\"prop3\")).to.eq(\"magenta\");\n});\ncy.clearLocalStorage(/prop1|2/).should(function (ls) {\n  expect(ls.getItem(\"prop1\")).to.be[\"null\"];\n  expect(ls.getItem(\"prop2\")).to.be[\"null\"];\n  expect(ls.getItem(\"prop3\")).to.eq(\"magenta\");\n});",
              "err": {},
              "uuid": "7e922ce1-70cc-4fd2-9f26-9e74193157e2",
              "parentUUID": "d225576f-dd90-4604-b15a-ac02517244f0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7e922ce1-70cc-4fd2-9f26-9e74193157e2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 968,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4cc37b01-cf72-4286-824b-d2303f71e7ce",
      "title": "",
      "fullFile": "cypress/integration/examples/location.spec.js",
      "file": "cypress/integration/examples/location.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "05c06de9-4236-45a6-ae3b-88dd931a3865",
          "title": "Location",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.hash() - get the current URL hash",
              "fullTitle": "Location cy.hash() - get the current URL hash",
              "timedOut": null,
              "duration": 463,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/hash\ncy.hash().should(\"be.empty\");",
              "err": {},
              "uuid": "f631f407-ebf5-41c2-807b-8940ed1012ca",
              "parentUUID": "05c06de9-4236-45a6-ae3b-88dd931a3865",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.location() - get window.location",
              "fullTitle": "Location cy.location() - get window.location",
              "timedOut": null,
              "duration": 191,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/location\ncy.location().should(function (location) {\n  expect(location.hash).to.be.empty;\n  expect(location.href).to.eq(\"https://example.cypress.io/commands/location\");\n  expect(location.host).to.eq(\"example.cypress.io\");\n  expect(location.hostname).to.eq(\"example.cypress.io\");\n  expect(location.origin).to.eq(\"https://example.cypress.io\");\n  expect(location.pathname).to.eq(\"/commands/location\");\n  expect(location.port).to.eq(\"\");\n  expect(location.protocol).to.eq(\"https:\");\n  expect(location.search).to.be.empty;\n});",
              "err": {},
              "uuid": "e4aec41f-0a3f-4738-b777-90ffb72f9fbf",
              "parentUUID": "05c06de9-4236-45a6-ae3b-88dd931a3865",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.url() - get the current URL",
              "fullTitle": "Location cy.url() - get the current URL",
              "timedOut": null,
              "duration": 95,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/url\ncy.url().should(\"eq\", \"https://example.cypress.io/commands/location\");",
              "err": {},
              "uuid": "ca11d79b-6ac0-43c8-894d-104efd3a06cd",
              "parentUUID": "05c06de9-4236-45a6-ae3b-88dd931a3865",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f631f407-ebf5-41c2-807b-8940ed1012ca",
            "e4aec41f-0a3f-4738-b777-90ffb72f9fbf",
            "ca11d79b-6ac0-43c8-894d-104efd3a06cd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 749,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a1836fa3-f779-45a8-a338-06bf9f4836f1",
      "title": "",
      "fullFile": "cypress/integration/examples/misc.spec.js",
      "file": "cypress/integration/examples/misc.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f6bd328e-f35a-4735-a9e8-a54dd90ad7e2",
          "title": "Misc",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".end() - end the command chain",
              "fullTitle": "Misc .end() - end the command chain",
              "timedOut": null,
              "duration": 701,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/end\n// cy.end is useful when you want to end a chain of commands\n// and force Cypress to re-query from the root element\ncy.get(\".misc-table\").within(function () {\n  // ends the current chain and yields null\n  cy.contains(\"Cheryl\").click().end(); // queries the entire table again\n  cy.contains(\"Charles\").click();\n});",
              "err": {},
              "uuid": "ecb58324-6cd4-4539-aaa3-169581ee4654",
              "parentUUID": "f6bd328e-f35a-4735-a9e8-a54dd90ad7e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.exec() - execute a system command",
              "fullTitle": "Misc cy.exec() - execute a system command",
              "timedOut": null,
              "duration": 841,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// execute a system command.\n// so you can take actions necessary for\n// your test outside the scope of Cypress.\n// https://on.cypress.io/exec\n// we can use Cypress.platform string to\n// select appropriate command\n// https://on.cypress/io/platform\ncy.log(\"Platform \".concat(Cypress.platform, \" architecture \").concat(Cypress.arch)); // on CircleCI Windows build machines we have a failure to run bash shell\n// https://github.com/cypress-io/cypress/issues/5169\n// so skip some of the tests by passing flag \"--env circle=true\"\nvar isCircleOnWindows = Cypress.platform === \"win32\" && Cypress.env(\"circle\");\nif (isCircleOnWindows) {\n  cy.log(\"Skipping test on CircleCI\");\n  return;\n} // cy.exec problem on Shippable CI\n// https://github.com/cypress-io/cypress/issues/6718\n\nvar isShippable = Cypress.platform === \"linux\" && Cypress.env(\"shippable\");\nif (isShippable) {\n  cy.log(\"Skipping test on ShippableCI\");\n  return;\n}\ncy.exec(\"echo Jane Lane\").its(\"stdout\").should(\"contain\", \"Jane Lane\");\nif (Cypress.platform === \"win32\") {\n  cy.exec(\"print cypress.json\").its(\"stderr\").should(\"be.empty\");\n} else {\n  cy.exec(\"cat cypress.json\").its(\"stderr\").should(\"be.empty\");\n  cy.exec(\"pwd\").its(\"code\").should(\"eq\", 0);\n}",
              "err": {},
              "uuid": "edc2b910-7289-4a7d-92f0-a2a300881b79",
              "parentUUID": "f6bd328e-f35a-4735-a9e8-a54dd90ad7e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.focused() - get the DOM element that has focus",
              "fullTitle": "Misc cy.focused() - get the DOM element that has focus",
              "timedOut": null,
              "duration": 446,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focused\ncy.get(\".misc-form\").find(\"#name\").click();\ncy.focused().should(\"have.id\", \"name\");\ncy.get(\".misc-form\").find(\"#description\").click();\ncy.focused().should(\"have.id\", \"description\");",
              "err": {},
              "uuid": "26619a03-db00-40af-b399-721b9494519a",
              "parentUUID": "f6bd328e-f35a-4735-a9e8-a54dd90ad7e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wrap() - wrap an object",
              "fullTitle": "Misc cy.wrap() - wrap an object",
              "timedOut": null,
              "duration": 336,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/wrap\ncy.wrap({\n  foo: \"bar\"\n}).should(\"have.property\", \"foo\").and(\"include\", \"bar\");",
              "err": {},
              "uuid": "56c880af-e706-4a5f-9741-d5de21eff2b3",
              "parentUUID": "f6bd328e-f35a-4735-a9e8-a54dd90ad7e2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "5d6f3523-cf40-4e84-8464-5571ba220d6f",
              "title": "Cypress.Screenshot",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "cy.screenshot() - take a screenshot",
                  "fullTitle": "Misc Cypress.Screenshot cy.screenshot() - take a screenshot",
                  "timedOut": null,
                  "duration": 1706,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/screenshot\ncy.screenshot(\"my-image\");",
                  "err": {},
                  "uuid": "49fd3c2a-b11e-48a2-976c-096100ff0bbd",
                  "parentUUID": "5d6f3523-cf40-4e84-8464-5571ba220d6f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cypress.Screenshot.defaults() - change default config of screenshots",
                  "fullTitle": "Misc Cypress.Screenshot Cypress.Screenshot.defaults() - change default config of screenshots",
                  "timedOut": null,
                  "duration": 262,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Cypress.Screenshot.defaults({\n  blackout: [\".foo\"],\n  capture: \"viewport\",\n  clip: {\n    x: 0,\n    y: 0,\n    width: 200,\n    height: 200\n  },\n  scale: false,\n  disableTimersAndAnimations: true,\n  screenshotOnRunFailure: true,\n  onBeforeScreenshot: function onBeforeScreenshot() {},\n  onAfterScreenshot: function onAfterScreenshot() {}\n});",
                  "err": {},
                  "uuid": "7ee39f0a-3a78-4f1b-9290-8b9886baf677",
                  "parentUUID": "5d6f3523-cf40-4e84-8464-5571ba220d6f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "49fd3c2a-b11e-48a2-976c-096100ff0bbd",
                "7ee39f0a-3a78-4f1b-9290-8b9886baf677"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1968,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "ecb58324-6cd4-4539-aaa3-169581ee4654",
            "edc2b910-7289-4a7d-92f0-a2a300881b79",
            "26619a03-db00-40af-b399-721b9494519a",
            "56c880af-e706-4a5f-9741-d5de21eff2b3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2324,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "39ed1715-7f92-4d5f-a4ad-2ec81dfa3d81",
      "title": "",
      "fullFile": "cypress/integration/examples/navigation.spec.js",
      "file": "cypress/integration/examples/navigation.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dbddd849-51c6-4001-ae25-5e2f678ff8ff",
          "title": "Navigation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.go() - go back or forward in the browser's history",
              "fullTitle": "Navigation cy.go() - go back or forward in the browser's history",
              "timedOut": null,
              "duration": 1581,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/go\ncy.location(\"pathname\").should(\"include\", \"navigation\");\ncy.go(\"back\");\ncy.location(\"pathname\").should(\"not.include\", \"navigation\");\ncy.go(\"forward\");\ncy.location(\"pathname\").should(\"include\", \"navigation\"); // clicking back\ncy.go(-1);\ncy.location(\"pathname\").should(\"not.include\", \"navigation\"); // clicking forward\ncy.go(1);\ncy.location(\"pathname\").should(\"include\", \"navigation\");",
              "err": {},
              "uuid": "e97bc656-1928-45e3-bf26-47b122eab303",
              "parentUUID": "dbddd849-51c6-4001-ae25-5e2f678ff8ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.reload() - reload the page",
              "fullTitle": "Navigation cy.reload() - reload the page",
              "timedOut": null,
              "duration": 454,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/reload\ncy.reload(); // reload the page without using the cache\ncy.reload(true);",
              "err": {},
              "uuid": "c488c875-6eca-42ed-a211-d5dc4897b00a",
              "parentUUID": "dbddd849-51c6-4001-ae25-5e2f678ff8ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.visit() - visit a remote url",
              "fullTitle": "Navigation cy.visit() - visit a remote url",
              "timedOut": null,
              "duration": 491,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/visit\n// Visit any sub-domain of your current domain\n// Pass options to the visit\ncy.visit(\"https://example.cypress.io/commands/navigation\", {\n  timeout: 50000,\n  // increase total time for the visit to resolve\n  onBeforeLoad: function onBeforeLoad(contentWindow) {\n    // contentWindow is the remote page's window object\n    expect((0, _typeof2[\"default\"])(contentWindow) === \"object\").to.be[\"true\"];\n  },\n  onLoad: function onLoad(contentWindow) {\n    // contentWindow is the remote page's window object\n    expect((0, _typeof2[\"default\"])(contentWindow) === \"object\").to.be[\"true\"];\n  }\n});",
              "err": {},
              "uuid": "f3d60267-1aeb-41b1-8bb2-0357fd17fe19",
              "parentUUID": "dbddd849-51c6-4001-ae25-5e2f678ff8ff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e97bc656-1928-45e3-bf26-47b122eab303",
            "c488c875-6eca-42ed-a211-d5dc4897b00a",
            "f3d60267-1aeb-41b1-8bb2-0357fd17fe19"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2526,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "74f9eef4-4dcc-490a-9134-8fc9dbb823ea",
      "title": "",
      "fullFile": "cypress/integration/examples/network_requests.spec.js",
      "file": "cypress/integration/examples/network_requests.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3537ecce-b027-466d-8bea-4d0719bee80f",
          "title": "Network Requests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.request() - make an XHR request",
              "fullTitle": "Network Requests cy.request() - make an XHR request",
              "timedOut": null,
              "duration": 3023,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/request\ncy.request(\"https://jsonplaceholder.cypress.io/comments\").should(function (response) {\n  expect(response.status).to.eq(200); // the server sometimes gets an extra comment posted from another machine\n  // which gets returned as 1 extra object\n  expect(response.body).to.have.property(\"length\").and.be.oneOf([500, 501]);\n  expect(response).to.have.property(\"headers\");\n  expect(response).to.have.property(\"duration\");\n});",
              "err": {},
              "uuid": "da8d0c0f-4758-43cd-9e42-58c5d62c3f32",
              "parentUUID": "3537ecce-b027-466d-8bea-4d0719bee80f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - verify response using BDD syntax",
              "fullTitle": "Network Requests cy.request() - verify response using BDD syntax",
              "timedOut": null,
              "duration": 762,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request(\"https://jsonplaceholder.cypress.io/comments\").then(function (response) {\n  // https://on.cypress.io/assertions\n  expect(response).property(\"status\").to.equal(200);\n  expect(response).property(\"body\").to.have.property(\"length\").and.be.oneOf([500, 501]);\n  expect(response).to.include.keys(\"headers\", \"duration\");\n});",
              "err": {},
              "uuid": "7d881592-50bd-48bc-88b5-34ebe8efdcce",
              "parentUUID": "3537ecce-b027-466d-8bea-4d0719bee80f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() with query parameters",
              "fullTitle": "Network Requests cy.request() with query parameters",
              "timedOut": null,
              "duration": 835,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// will execute request\n// https://jsonplaceholder.cypress.io/comments?postId=1&id=3\ncy.request({\n  url: \"https://jsonplaceholder.cypress.io/comments\",\n  qs: {\n    postId: 1,\n    id: 3\n  }\n}).its(\"body\").should(\"be.an\", \"array\").and(\"have.length\", 1).its(\"0\") // yields first element of the array\n.should(\"contain\", {\n  postId: 1,\n  id: 3\n});",
              "err": {},
              "uuid": "e7025a53-2c3e-4262-8187-90d6fca2aa24",
              "parentUUID": "3537ecce-b027-466d-8bea-4d0719bee80f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - pass result to the second request",
              "fullTitle": "Network Requests cy.request() - pass result to the second request",
              "timedOut": null,
              "duration": 1584,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// first, let's find out the userId of the first user we have\ncy.request(\"https://jsonplaceholder.cypress.io/users?_limit=1\").its(\"body\") // yields the response object\n.its(\"0\") // yields the first element of the returned list\n// the above two commands its('body').its('0')\n// can be written as its('body.0')\n// if you do not care about TypeScript checks\n.then(function (user) {\n  expect(user).property(\"id\").to.be.a(\"number\"); // make a new post on behalf of the user\n  cy.request(\"POST\", \"https://jsonplaceholder.cypress.io/posts\", {\n    userId: user.id,\n    title: \"Cypress Test Runner\",\n    body: \"Fast, easy and reliable testing for anything that runs in a browser.\"\n  });\n}) // note that the value here is the returned value of the 2nd request\n// which is the new post object\n.then(function (response) {\n  expect(response).property(\"status\").to.equal(201); // new entity created\n  expect(response).property(\"body\").to.contain({\n    title: \"Cypress Test Runner\"\n  }); // we don't know the exact post id - only that it will be > 100\n  // since JSONPlaceholder has built-in 100 posts\n  expect(response.body).property(\"id\").to.be.a(\"number\").and.to.be.gt(100); // we don't know the user id here - since it was in above closure\n  // so in this test just confirm that the property is there\n  expect(response.body).property(\"userId\").to.be.a(\"number\");\n});",
              "err": {},
              "uuid": "eb4112d6-7224-4910-a490-3c06ae1e185f",
              "parentUUID": "3537ecce-b027-466d-8bea-4d0719bee80f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - save response in the shared test context",
              "fullTitle": "Network Requests cy.request() - save response in the shared test context",
              "timedOut": null,
              "duration": 1237,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/variables-and-aliases\ncy.request(\"https://jsonplaceholder.cypress.io/users?_limit=1\").its(\"body\").its(\"0\") // yields the first element of the returned list\n.as(\"user\") // saves the object in the test context\n.then(function () {\n  // NOTE 👀\n  //  By the time this callback runs the \"as('user')\" command\n  //  has saved the user object in the test context.\n  //  To access the test context we need to use\n  //  the \"function () { ... }\" callback form,\n  //  otherwise \"this\" points at a wrong or undefined object!\n  cy.request(\"POST\", \"https://jsonplaceholder.cypress.io/posts\", {\n    userId: this.user.id,\n    title: \"Cypress Test Runner\",\n    body: \"Fast, easy and reliable testing for anything that runs in a browser.\"\n  }).its(\"body\").as(\"post\"); // save the new post from the response\n}).then(function () {\n  // When this callback runs, both \"cy.request\" API commands have finished\n  // and the test context has \"user\" and \"post\" objects set.\n  // Let's verify them.\n  expect(this.post, \"post has the right user id\").property(\"userId\").to.equal(this.user.id);\n});",
              "err": {},
              "uuid": "eedb5970-7319-4d84-83fe-4ec150ac2e8b",
              "parentUUID": "3537ecce-b027-466d-8bea-4d0719bee80f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.intercept() - route responses to matching requests",
              "fullTitle": "Network Requests cy.intercept() - route responses to matching requests",
              "timedOut": null,
              "duration": 1715,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/intercept\nvar message = \"whoa, this comment does not exist\"; // Listen to GET to comments/1\ncy.intercept(\"GET\", \"**/comments/*\").as(\"getComment\"); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get(\".network-btn\").click(); // https://on.cypress.io/wait\ncy.wait(\"@getComment\").its(\"response.statusCode\").should(\"be.oneOf\", [200, 304]); // Listen to POST to comments\ncy.intercept(\"POST\", \"**/comments\").as(\"postComment\"); // we have code that posts a comment when\n// the button is clicked in scripts.js\ncy.get(\".network-post\").click();\ncy.wait(\"@postComment\").should(function (_ref) {\n  var request = _ref.request,\n      response = _ref.response;\n  expect(request.body).to.include(\"email\");\n  expect(request.headers).to.have.property(\"content-type\");\n  expect(response && response.body).to.have.property(\"name\", \"Using POST in cy.intercept()\");\n}); // Stub a response to PUT comments/ ****\ncy.intercept({\n  method: \"PUT\",\n  url: \"**/comments/*\"\n}, {\n  statusCode: 404,\n  body: {\n    error: message\n  },\n  headers: {\n    \"access-control-allow-origin\": \"*\"\n  },\n  delayMs: 500\n}).as(\"putComment\"); // we have code that puts a comment when\n// the button is clicked in scripts.js\ncy.get(\".network-put\").click();\ncy.wait(\"@putComment\"); // our 404 statusCode logic in scripts.js executed\ncy.get(\".network-put-comment\").should(\"contain\", message);",
              "err": {},
              "uuid": "0746d044-f0fd-4eab-b65a-e277db4da671",
              "parentUUID": "3537ecce-b027-466d-8bea-4d0719bee80f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "da8d0c0f-4758-43cd-9e42-58c5d62c3f32",
            "7d881592-50bd-48bc-88b5-34ebe8efdcce",
            "e7025a53-2c3e-4262-8187-90d6fca2aa24",
            "eb4112d6-7224-4910-a490-3c06ae1e185f",
            "eedb5970-7319-4d84-83fe-4ec150ac2e8b",
            "0746d044-f0fd-4eab-b65a-e277db4da671"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9156,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "eacb6cf6-504e-4c19-b541-d68f7ecfa9b3",
      "title": "",
      "fullFile": "cypress/integration/examples/querying.spec.js",
      "file": "cypress/integration/examples/querying.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7a5690d8-32c7-4ba9-a75a-fb4781cca821",
          "title": "Querying",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.get() - query DOM elements",
              "fullTitle": "Querying cy.get() - query DOM elements",
              "timedOut": null,
              "duration": 523,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/get\ncy.get(\"#query-btn\").should(\"contain\", \"Button\");\ncy.get(\".query-btn\").should(\"contain\", \"Button\");\ncy.get(\"#querying .well>button:first\").should(\"contain\", \"Button\"); //              ↲\n// Use CSS selectors just like jQuery\ncy.get('[data-test-id=\"test-example\"]').should(\"have.class\", \"example\"); // 'cy.get()' yields jQuery object, you can get its attribute\n// by invoking `.attr()` method\ncy.get('[data-test-id=\"test-example\"]').invoke(\"attr\", \"data-test-id\").should(\"equal\", \"test-example\"); // or you can get element's CSS property\ncy.get('[data-test-id=\"test-example\"]').invoke(\"css\", \"position\").should(\"equal\", \"static\"); // or use assertions directly during 'cy.get()'\n// https://on.cypress.io/assertions\ncy.get('[data-test-id=\"test-example\"]').should(\"have.attr\", \"data-test-id\", \"test-example\").and(\"have.css\", \"position\", \"static\");",
              "err": {},
              "uuid": "de332201-8a69-43bd-89b9-6cf46f0f4a56",
              "parentUUID": "7a5690d8-32c7-4ba9-a75a-fb4781cca821",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.contains() - query DOM elements with matching content",
              "fullTitle": "Querying cy.contains() - query DOM elements with matching content",
              "timedOut": null,
              "duration": 228,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/contains\ncy.get(\".query-list\").contains(\"bananas\").should(\"have.class\", \"third\"); // we can pass a regexp to `.contains()`\ncy.get(\".query-list\").contains(/^b\\w+/).should(\"have.class\", \"third\");\ncy.get(\".query-list\").contains(\"apples\").should(\"have.class\", \"first\"); // passing a selector to contains will\n// yield the selector containing the text\ncy.get(\"#querying\").contains(\"ul\", \"oranges\").should(\"have.class\", \"query-list\");\ncy.get(\".query-button\").contains(\"Save Form\").should(\"have.class\", \"btn\");",
              "err": {},
              "uuid": "f44b6510-6ff0-4784-b0c4-c50fd6f8a58a",
              "parentUUID": "7a5690d8-32c7-4ba9-a75a-fb4781cca821",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".within() - query DOM elements within a specific element",
              "fullTitle": "Querying .within() - query DOM elements within a specific element",
              "timedOut": null,
              "duration": 121,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/within\ncy.get(\".query-form\").within(function () {\n  cy.get(\"input:first\").should(\"have.attr\", \"placeholder\", \"Email\");\n  cy.get(\"input:last\").should(\"have.attr\", \"placeholder\", \"Password\");\n});",
              "err": {},
              "uuid": "5c76ca43-e7a5-44f9-9ad5-5c90a8511a96",
              "parentUUID": "7a5690d8-32c7-4ba9-a75a-fb4781cca821",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.root() - query the root DOM element",
              "fullTitle": "Querying cy.root() - query the root DOM element",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/root\n// By default, root is the document\ncy.root().should(\"match\", \"html\");\ncy.get(\".query-ul\").within(function () {\n  // In this within, the root is now the ul DOM element\n  cy.root().should(\"have.class\", \"query-ul\");\n});",
              "err": {},
              "uuid": "b619de19-a1f6-4502-a8a0-4d386c39dcbd",
              "parentUUID": "7a5690d8-32c7-4ba9-a75a-fb4781cca821",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "best practices - selecting elements",
              "fullTitle": "Querying best practices - selecting elements",
              "timedOut": null,
              "duration": 778,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/best-practices#Selecting-Elements\ncy.get(\"[data-cy=best-practices-selecting-elements]\").within(function () {\n  // Worst - too generic, no context\n  cy.get(\"button\").click(); // Bad. Coupled to styling. Highly subject to change.\n  cy.get(\".btn.btn-large\").click(); // Average. Coupled to the `name` attribute which has HTML semantics.\n  cy.get(\"[name=submission]\").click(); // Better. But still coupled to styling or JS event listeners.\n  cy.get(\"#main\").click(); // Slightly better. Uses an ID but also ensures the element\n  // has an ARIA role attribute\n  cy.get(\"#main[role=button]\").click(); // Much better. But still coupled to text content that may change.\n  cy.contains(\"Submit\").click(); // Best. Insulated from all changes.\n  cy.get(\"[data-cy=submit]\").click();\n});",
              "err": {},
              "uuid": "ac92c7c6-e2e2-4c2b-86b8-244b8e1c5202",
              "parentUUID": "7a5690d8-32c7-4ba9-a75a-fb4781cca821",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "de332201-8a69-43bd-89b9-6cf46f0f4a56",
            "f44b6510-6ff0-4784-b0c4-c50fd6f8a58a",
            "5c76ca43-e7a5-44f9-9ad5-5c90a8511a96",
            "b619de19-a1f6-4502-a8a0-4d386c39dcbd",
            "ac92c7c6-e2e2-4c2b-86b8-244b8e1c5202"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1792,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "da564997-9159-4895-8f63-b3d2d96c6cbb",
      "title": "",
      "fullFile": "cypress/integration/examples/spies_stubs_clocks.spec.js",
      "file": "cypress/integration/examples/spies_stubs_clocks.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cce381c9-c906-47aa-8cb1-c84f66954322",
          "title": "Spies, Stubs, and Clock",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.spy() - wrap a method in a spy",
              "fullTitle": "Spies, Stubs, and Clock cy.spy() - wrap a method in a spy",
              "timedOut": null,
              "duration": 404,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spy\ncy.visit(\"https://example.cypress.io/commands/spies-stubs-clocks\");\nvar obj = {\n  foo: function foo() {}\n};\nvar spy = cy.spy(obj, \"foo\").as(\"anyArgs\");\nobj.foo();\nexpect(spy).to.be.called;",
              "err": {},
              "uuid": "053f76f5-18c0-4cec-9d40-cab26c540c51",
              "parentUUID": "cce381c9-c906-47aa-8cb1-c84f66954322",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.spy() retries until assertions pass",
              "fullTitle": "Spies, Stubs, and Clock cy.spy() retries until assertions pass",
              "timedOut": null,
              "duration": 2531,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://example.cypress.io/commands/spies-stubs-clocks\");\nvar obj = {\n  /**\n   * Prints the argument passed\n   * @param x {any}\n   */\n  foo: function foo(x) {\n    console.log(\"obj.foo called with\", x);\n  }\n};\ncy.spy(obj, \"foo\").as(\"foo\");\nsetTimeout(function () {\n  obj.foo(\"first\");\n}, 500);\nsetTimeout(function () {\n  obj.foo(\"second\");\n}, 2500);\ncy.get(\"@foo\").should(\"have.been.calledTwice\");",
              "err": {},
              "uuid": "65f9593f-f408-4f44-a602-40afd441501f",
              "parentUUID": "cce381c9-c906-47aa-8cb1-c84f66954322",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.stub() - create a stub and/or replace a function with stub",
              "fullTitle": "Spies, Stubs, and Clock cy.stub() - create a stub and/or replace a function with stub",
              "timedOut": null,
              "duration": 113,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/stub\ncy.visit(\"https://example.cypress.io/commands/spies-stubs-clocks\");\nvar obj = {\n  /**\n   * prints both arguments to the console\n   * @param a {string}\n   * @param b {string}\n   */\n  foo: function foo(a, b) {\n    console.log(\"a\", a, \"b\", b);\n  }\n};\nvar stub = cy.stub(obj, \"foo\").as(\"foo\");\nobj.foo(\"foo\", \"bar\");\nexpect(stub).to.be.called;",
              "err": {},
              "uuid": "81614d50-3944-49f5-ad7d-e891b6aa79b0",
              "parentUUID": "cce381c9-c906-47aa-8cb1-c84f66954322",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clock() - control time in the browser",
              "fullTitle": "Spies, Stubs, and Clock cy.clock() - control time in the browser",
              "timedOut": null,
              "duration": 237,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clock\n// create the date in UTC so its always the same\n// no matter what local timezone the browser is running in\nvar now = new Date(Date.UTC(2017, 2, 14)).getTime();\ncy.clock(now);\ncy.visit(\"https://example.cypress.io/commands/spies-stubs-clocks\");\ncy.get(\"#clock-div\").click().should(\"have.text\", \"1489449600\");",
              "err": {},
              "uuid": "dda64991-3587-4811-8dad-fda04cb99016",
              "parentUUID": "cce381c9-c906-47aa-8cb1-c84f66954322",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.tick() - move time in the browser",
              "fullTitle": "Spies, Stubs, and Clock cy.tick() - move time in the browser",
              "timedOut": null,
              "duration": 288,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/tick\n// create the date in UTC so its always the same\n// no matter what local timezone the browser is running in\nvar now = new Date(Date.UTC(2017, 2, 14)).getTime();\ncy.clock(now);\ncy.visit(\"https://example.cypress.io/commands/spies-stubs-clocks\");\ncy.get(\"#tick-div\").click().should(\"have.text\", \"1489449600\");\ncy.tick(10000); // 10 seconds passed\ncy.get(\"#tick-div\").click().should(\"have.text\", \"1489449610\");",
              "err": {},
              "uuid": "1b735904-9216-4958-ac95-97ebc3962b1d",
              "parentUUID": "cce381c9-c906-47aa-8cb1-c84f66954322",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.stub() matches depending on arguments",
              "fullTitle": "Spies, Stubs, and Clock cy.stub() matches depending on arguments",
              "timedOut": null,
              "duration": 26,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// see all possible matchers at\n// https://sinonjs.org/releases/latest/matchers/\nvar greeter = {\n  /**\n   * Greets a person\n   * @param {string} name\n   */\n  greet: function greet(name) {\n    return \"Hello, \".concat(name, \"!\");\n  }\n};\ncy.stub(greeter, \"greet\").callThrough() // if you want non-matched calls to call the real method\n.withArgs(Cypress.sinon.match.string).returns(\"Hi\").withArgs(Cypress.sinon.match.number)[\"throws\"](new Error(\"Invalid name\"));\nexpect(greeter.greet(\"World\")).to.equal(\"Hi\"); // @ts-ignore\nexpect(function () {\n  return greeter.greet(42);\n}).to[\"throw\"](\"Invalid name\");\nexpect(greeter.greet).to.have.been.calledTwice; // non-matched calls goes the actual method\n// @ts-ignore\nexpect(greeter.greet()).to.equal(\"Hello, undefined!\");",
              "err": {},
              "uuid": "670d4f33-7e89-49ff-9da9-87a769ad9a87",
              "parentUUID": "cce381c9-c906-47aa-8cb1-c84f66954322",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "matches call arguments using Sinon matchers",
              "fullTitle": "Spies, Stubs, and Clock matches call arguments using Sinon matchers",
              "timedOut": null,
              "duration": 31,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// see all possible matchers at\n// https://sinonjs.org/releases/latest/matchers/\nvar calculator = {\n  /**\n   * returns the sum of two arguments\n   * @param a {number}\n   * @param b {number}\n   */\n  add: function add(a, b) {\n    return a + b;\n  }\n};\nvar spy = cy.spy(calculator, \"add\").as(\"add\");\nexpect(calculator.add(2, 3)).to.equal(5); // if we want to assert the exact values used during the call\nexpect(spy).to.be.calledWith(2, 3); // let's confirm \"add\" method was called with two numbers\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match.number); // alternatively, provide the value to match\nexpect(spy).to.be.calledWith(Cypress.sinon.match(2), Cypress.sinon.match(3)); // match any value\nexpect(spy).to.be.calledWith(Cypress.sinon.match.any, 3); // match any value from a list\nexpect(spy).to.be.calledWith(Cypress.sinon.match[\"in\"]([1, 2, 3]), 3);\n/**\n * Returns true if the given number is event\n * @param {number} x\n */\nvar isEven = function isEven(x) {\n  return x % 2 === 0;\n}; // expect the value to pass a custom predicate function\n// the second argument to \"sinon.match(predicate, message)\" is\n// shown if the predicate does not pass and assertion fails\n\nexpect(spy).to.be.calledWith(Cypress.sinon.match(isEven, \"isEven\"), 3);\n/**\n * Returns a function that checks if a given number is larger than the limit\n * @param {number} limit\n * @returns {(x: number) => boolean}\n */\nvar isGreaterThan = function isGreaterThan(limit) {\n  return function (x) {\n    return x > limit;\n  };\n};\n/**\n * Returns a function that checks if a given number is less than the limit\n * @param {number} limit\n * @returns {(x: number) => boolean}\n */\n\nvar isLessThan = function isLessThan(limit) {\n  return function (x) {\n    return x < limit;\n  };\n}; // you can combine several matchers using \"and\", \"or\"\n\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match(isGreaterThan(2), \"> 2\").and(Cypress.sinon.match(isLessThan(4), \"< 4\")));\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match(isGreaterThan(200), \"> 200\").or(Cypress.sinon.match(3))); // matchers can be used from BDD assertions\ncy.get(\"@add\").should(\"have.been.calledWith\", Cypress.sinon.match.number, Cypress.sinon.match(3)); // you can alias matchers for shorter test code\nvar M = Cypress.sinon.match;\ncy.get(\"@add\").should(\"have.been.calledWith\", M.number, M(3));",
              "err": {},
              "uuid": "ca5d5c2d-e824-45fb-bdf0-3d1109fc4013",
              "parentUUID": "cce381c9-c906-47aa-8cb1-c84f66954322",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "053f76f5-18c0-4cec-9d40-cab26c540c51",
            "65f9593f-f408-4f44-a602-40afd441501f",
            "81614d50-3944-49f5-ad7d-e891b6aa79b0",
            "dda64991-3587-4811-8dad-fda04cb99016",
            "1b735904-9216-4958-ac95-97ebc3962b1d",
            "670d4f33-7e89-49ff-9da9-87a769ad9a87",
            "ca5d5c2d-e824-45fb-bdf0-3d1109fc4013"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3630,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4482e7c0-fe9a-49ac-b9b3-f2f30b81b632",
      "title": "",
      "fullFile": "cypress/integration/examples/traversal.spec.js",
      "file": "cypress/integration/examples/traversal.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2306b02e-1051-41f8-a901-f4a7b90d81c9",
          "title": "Traversal",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".children() - get child DOM elements",
              "fullTitle": "Traversal .children() - get child DOM elements",
              "timedOut": null,
              "duration": 498,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/children\ncy.get(\".traversal-breadcrumb\").children(\".active\").should(\"contain\", \"Data\");",
              "err": {},
              "uuid": "4b7b17f0-7c39-4d47-ad9f-9a654decbe6b",
              "parentUUID": "2306b02e-1051-41f8-a901-f4a7b90d81c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".closest() - get closest ancestor DOM element",
              "fullTitle": "Traversal .closest() - get closest ancestor DOM element",
              "timedOut": null,
              "duration": 221,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/closest\ncy.get(\".traversal-badge\").closest(\"ul\").should(\"have.class\", \"list-group\");",
              "err": {},
              "uuid": "94befce3-c9cc-4f6b-95e7-38a2c4457182",
              "parentUUID": "2306b02e-1051-41f8-a901-f4a7b90d81c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".eq() - get a DOM element at a specific index",
              "fullTitle": "Traversal .eq() - get a DOM element at a specific index",
              "timedOut": null,
              "duration": 110,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/eq\ncy.get(\".traversal-list>li\").eq(1).should(\"contain\", \"siamese\");",
              "err": {},
              "uuid": "e6fb9a0e-6460-4b65-843b-7a0ab44549ba",
              "parentUUID": "2306b02e-1051-41f8-a901-f4a7b90d81c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".filter() - get DOM elements that match the selector",
              "fullTitle": "Traversal .filter() - get DOM elements that match the selector",
              "timedOut": null,
              "duration": 122,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/filter\ncy.get(\".traversal-nav>li\").filter(\".active\").should(\"contain\", \"About\");",
              "err": {},
              "uuid": "626b4eb8-78a7-4839-9138-64f5382673c3",
              "parentUUID": "2306b02e-1051-41f8-a901-f4a7b90d81c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".find() - get descendant DOM elements of the selector",
              "fullTitle": "Traversal .find() - get descendant DOM elements of the selector",
              "timedOut": null,
              "duration": 134,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/find\ncy.get(\".traversal-pagination\").find(\"li\").find(\"a\").should(\"have.length\", 7);",
              "err": {},
              "uuid": "38eef906-01ba-48c8-b232-d9783b4e86f6",
              "parentUUID": "2306b02e-1051-41f8-a901-f4a7b90d81c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".first() - get first DOM element",
              "fullTitle": "Traversal .first() - get first DOM element",
              "timedOut": null,
              "duration": 112,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/first\ncy.get(\".traversal-table td\").first().should(\"contain\", \"1\");",
              "err": {},
              "uuid": "e2ea40d3-8052-4705-882b-7ee74607516e",
              "parentUUID": "2306b02e-1051-41f8-a901-f4a7b90d81c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".last() - get last DOM element",
              "fullTitle": "Traversal .last() - get last DOM element",
              "timedOut": null,
              "duration": 168,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/last\ncy.get(\".traversal-buttons .btn\").last().should(\"contain\", \"Submit\");",
              "err": {},
              "uuid": "96919f69-b9ac-4a67-bbc3-26462958128a",
              "parentUUID": "2306b02e-1051-41f8-a901-f4a7b90d81c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".next() - get next sibling DOM element",
              "fullTitle": "Traversal .next() - get next sibling DOM element",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/next\ncy.get(\".traversal-ul\").contains(\"apples\").next().should(\"contain\", \"oranges\");",
              "err": {},
              "uuid": "0707448f-071a-45b1-8d35-abb80a50ed37",
              "parentUUID": "2306b02e-1051-41f8-a901-f4a7b90d81c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".nextAll() - get all next sibling DOM elements",
              "fullTitle": "Traversal .nextAll() - get all next sibling DOM elements",
              "timedOut": null,
              "duration": 167,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/nextall\ncy.get(\".traversal-next-all\").contains(\"oranges\").nextAll().should(\"have.length\", 3);",
              "err": {},
              "uuid": "f52b1308-8b74-45bf-a292-99b6d25b6f62",
              "parentUUID": "2306b02e-1051-41f8-a901-f4a7b90d81c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".nextUntil() - get next sibling DOM elements until next el",
              "fullTitle": "Traversal .nextUntil() - get next sibling DOM elements until next el",
              "timedOut": null,
              "duration": 165,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/nextuntil\ncy.get(\"#veggies\").nextUntil(\"#nuts\").should(\"have.length\", 3);",
              "err": {},
              "uuid": "64b444a8-8970-414b-90f6-f0402cbd9fe8",
              "parentUUID": "2306b02e-1051-41f8-a901-f4a7b90d81c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".not() - remove DOM elements from set of DOM elements",
              "fullTitle": "Traversal .not() - remove DOM elements from set of DOM elements",
              "timedOut": null,
              "duration": 133,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/not\ncy.get(\".traversal-disabled .btn\").not(\"[disabled]\").should(\"not.contain\", \"Disabled\");",
              "err": {},
              "uuid": "9fe72c7a-8d33-4864-ac93-b9021e6635da",
              "parentUUID": "2306b02e-1051-41f8-a901-f4a7b90d81c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parent() - get parent DOM element from DOM elements",
              "fullTitle": "Traversal .parent() - get parent DOM element from DOM elements",
              "timedOut": null,
              "duration": 134,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parent\ncy.get(\".traversal-mark\").parent().should(\"contain\", \"Morbi leo risus\");",
              "err": {},
              "uuid": "8ff30ec8-b81b-4a76-8ccd-3729afea8821",
              "parentUUID": "2306b02e-1051-41f8-a901-f4a7b90d81c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parents() - get parent DOM elements from DOM elements",
              "fullTitle": "Traversal .parents() - get parent DOM elements from DOM elements",
              "timedOut": null,
              "duration": 161,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parents\ncy.get(\".traversal-cite\").parents().should(\"match\", \"blockquote\");",
              "err": {},
              "uuid": "948763e6-cb13-41f2-b9da-86f12beadf88",
              "parentUUID": "2306b02e-1051-41f8-a901-f4a7b90d81c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parentsUntil() - get parent DOM elements from DOM elements until el",
              "fullTitle": "Traversal .parentsUntil() - get parent DOM elements from DOM elements until el",
              "timedOut": null,
              "duration": 159,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parentsuntil\ncy.get(\".clothes-nav\").find(\".active\").parentsUntil(\".clothes-nav\").should(\"have.length\", 2);",
              "err": {},
              "uuid": "260e29eb-4c96-478d-a3e4-8afe90c2f0c4",
              "parentUUID": "2306b02e-1051-41f8-a901-f4a7b90d81c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prev() - get previous sibling DOM element",
              "fullTitle": "Traversal .prev() - get previous sibling DOM element",
              "timedOut": null,
              "duration": 145,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prev\ncy.get(\".birds\").find(\".active\").prev().should(\"contain\", \"Lorikeets\");",
              "err": {},
              "uuid": "c81849b8-3853-4127-9449-6afe445b86a8",
              "parentUUID": "2306b02e-1051-41f8-a901-f4a7b90d81c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prevAll() - get all previous sibling DOM elements",
              "fullTitle": "Traversal .prevAll() - get all previous sibling DOM elements",
              "timedOut": null,
              "duration": 135,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prevall\ncy.get(\".fruits-list\").find(\".third\").prevAll().should(\"have.length\", 2);",
              "err": {},
              "uuid": "ce6189d9-3e64-4d57-8853-8789100947be",
              "parentUUID": "2306b02e-1051-41f8-a901-f4a7b90d81c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prevUntil() - get all previous sibling DOM elements until el",
              "fullTitle": "Traversal .prevUntil() - get all previous sibling DOM elements until el",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prevuntil\ncy.get(\".foods-list\").find(\"#nuts\").prevUntil(\"#veggies\").should(\"have.length\", 3);",
              "err": {},
              "uuid": "919a5c08-8343-4fb8-ae3d-7a377979d5fb",
              "parentUUID": "2306b02e-1051-41f8-a901-f4a7b90d81c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".siblings() - get all sibling DOM elements",
              "fullTitle": "Traversal .siblings() - get all sibling DOM elements",
              "timedOut": null,
              "duration": 176,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/siblings\ncy.get(\".traversal-pills .active\").siblings().should(\"have.length\", 2);",
              "err": {},
              "uuid": "2e675a8b-2144-44ed-a18e-97f54e1ca511",
              "parentUUID": "2306b02e-1051-41f8-a901-f4a7b90d81c9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4b7b17f0-7c39-4d47-ad9f-9a654decbe6b",
            "94befce3-c9cc-4f6b-95e7-38a2c4457182",
            "e6fb9a0e-6460-4b65-843b-7a0ab44549ba",
            "626b4eb8-78a7-4839-9138-64f5382673c3",
            "38eef906-01ba-48c8-b232-d9783b4e86f6",
            "e2ea40d3-8052-4705-882b-7ee74607516e",
            "96919f69-b9ac-4a67-bbc3-26462958128a",
            "0707448f-071a-45b1-8d35-abb80a50ed37",
            "f52b1308-8b74-45bf-a292-99b6d25b6f62",
            "64b444a8-8970-414b-90f6-f0402cbd9fe8",
            "9fe72c7a-8d33-4864-ac93-b9021e6635da",
            "8ff30ec8-b81b-4a76-8ccd-3729afea8821",
            "948763e6-cb13-41f2-b9da-86f12beadf88",
            "260e29eb-4c96-478d-a3e4-8afe90c2f0c4",
            "c81849b8-3853-4127-9449-6afe445b86a8",
            "ce6189d9-3e64-4d57-8853-8789100947be",
            "919a5c08-8343-4fb8-ae3d-7a377979d5fb",
            "2e675a8b-2144-44ed-a18e-97f54e1ca511"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3024,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "48698a9b-a881-4658-b5ad-b3eff430e1c5",
      "title": "",
      "fullFile": "cypress/integration/examples/utilities.spec.js",
      "file": "cypress/integration/examples/utilities.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7a171985-614f-4aed-b391-c5df4ff8a6b4",
          "title": "Utilities",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Cypress._ - call a lodash method",
              "fullTitle": "Utilities Cypress._ - call a lodash method",
              "timedOut": null,
              "duration": 1280,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/_\ncy.request(\"https://jsonplaceholder.cypress.io/users\").then(function (response) {\n  var ids = Cypress._.chain(response.body).map(\"id\").take(3).value();\n  expect(ids).to.deep.eq([1, 2, 3]);\n});",
              "err": {},
              "uuid": "28ce0f3e-08e6-4370-beb5-f388c655dca6",
              "parentUUID": "7a171985-614f-4aed-b391-c5df4ff8a6b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.$ - call a jQuery method",
              "fullTitle": "Utilities Cypress.$ - call a jQuery method",
              "timedOut": null,
              "duration": 297,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/$\nvar $li = Cypress.$(\".utility-jquery li:first\");\ncy.wrap($li).should(\"not.have.class\", \"active\").click().should(\"have.class\", \"active\");",
              "err": {},
              "uuid": "b7ed9adf-5255-4d3f-85e3-19b0fd09341d",
              "parentUUID": "7a171985-614f-4aed-b391-c5df4ff8a6b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.Blob - blob utilities and base64 string conversion",
              "fullTitle": "Utilities Cypress.Blob - blob utilities and base64 string conversion",
              "timedOut": null,
              "duration": 735,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blob\ncy.get(\".utility-blob\").then(function ($div) {\n  // https://github.com/nolanlawson/blob-util#imgSrcToDataURL\n  // get the dataUrl string for the javascript-logo\n  return Cypress.Blob.imgSrcToDataURL(\"https://example.cypress.io/assets/img/javascript-logo.png\", undefined, \"anonymous\").then(function (dataUrl) {\n    // create an <img> element and set its src to the dataUrl\n    var img = Cypress.$(\"<img />\", {\n      src: dataUrl\n    }); // need to explicitly return cy here since we are initially returning\n    // the Cypress.Blob.imgSrcToDataURL promise to our test\n    // append the image\n    $div.append(img);\n    cy.get(\".utility-blob img\").click().should(\"have.attr\", \"src\", dataUrl);\n  });\n});",
              "err": {},
              "uuid": "48c7a6bb-10d4-40e2-bacb-19ab5f07c4f3",
              "parentUUID": "7a171985-614f-4aed-b391-c5df4ff8a6b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.minimatch - test out glob patterns against strings",
              "fullTitle": "Utilities Cypress.minimatch - test out glob patterns against strings",
              "timedOut": null,
              "duration": 113,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/minimatch\nvar matching = Cypress.minimatch(\"/users/1/comments\", \"/users/*/comments\", {\n  matchBase: true\n});\nexpect(matching, \"matching wildcard\").to.be[\"true\"];\nmatching = Cypress.minimatch(\"/users/1/comments/2\", \"/users/*/comments\", {\n  matchBase: true\n});\nexpect(matching, \"comments\").to.be[\"false\"]; // ** matches against all downstream path segments\nmatching = Cypress.minimatch(\"/foo/bar/baz/123/quux?a=b&c=2\", \"/foo/**\", {\n  matchBase: true\n});\nexpect(matching, \"comments\").to.be[\"true\"]; // whereas * matches only the next path segment\nmatching = Cypress.minimatch(\"/foo/bar/baz/123/quux?a=b&c=2\", \"/foo/*\", {\n  matchBase: false\n});\nexpect(matching, \"comments\").to.be[\"false\"];",
              "err": {},
              "uuid": "bf97e0bb-e73b-4932-a629-8541f6074c64",
              "parentUUID": "7a171985-614f-4aed-b391-c5df4ff8a6b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.Promise - instantiate a bluebird promise",
              "fullTitle": "Utilities Cypress.Promise - instantiate a bluebird promise",
              "timedOut": null,
              "duration": 1094,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/promise\nvar waited = false;\n/**\n * @return Bluebird<string>\n */\nfunction waitOneSecond() {\n  // return a promise that resolves after 1 second\n  // @ts-ignore TS2351 (new Cypress.Promise)\n  return new Cypress.Promise(function (resolve, reject) {\n    setTimeout(function () {\n      // set waited to true\n      waited = true; // resolve with 'foo' string\n      resolve(\"foo\");\n    }, 1000);\n  });\n}\ncy.then(function () {\n  // return a promise to cy.then() that\n  // is awaited until it resolves\n  // @ts-ignore TS7006\n  return waitOneSecond().then(function (str) {\n    expect(str).to.eq(\"foo\");\n    expect(waited).to.be[\"true\"];\n  });\n});",
              "err": {},
              "uuid": "94be0c45-67ba-467d-8831-92d01965ea78",
              "parentUUID": "7a171985-614f-4aed-b391-c5df4ff8a6b4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "28ce0f3e-08e6-4370-beb5-f388c655dca6",
            "b7ed9adf-5255-4d3f-85e3-19b0fd09341d",
            "48c7a6bb-10d4-40e2-bacb-19ab5f07c4f3",
            "bf97e0bb-e73b-4932-a629-8541f6074c64",
            "94be0c45-67ba-467d-8831-92d01965ea78"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3519,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "95a214d0-6edd-4492-bde4-4fd6ab7f016c",
      "title": "",
      "fullFile": "cypress/integration/examples/viewport.spec.js",
      "file": "cypress/integration/examples/viewport.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "75532d15-1983-462f-b0dc-24f79000cbb4",
          "title": "Viewport",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.viewport() - set the viewport size and dimension",
              "fullTitle": "Viewport cy.viewport() - set the viewport size and dimension",
              "timedOut": null,
              "duration": 3354,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/viewport\ncy.get(\"#navbar\").should(\"be.visible\");\ncy.viewport(320, 480); // the navbar should have collapse since our screen is smaller\ncy.get(\"#navbar\").should(\"not.be.visible\");\ncy.get(\".navbar-toggle\").should(\"be.visible\").click();\ncy.get(\".nav\").find(\"a\").should(\"be.visible\"); // lets see what our app looks like on a super large screen\ncy.viewport(2999, 2999); // cy.viewport() accepts a set of preset sizes\n// to easily set the screen to a device's width and height\n// We added a cy.wait() between each viewport change so you can see\n// the change otherwise it is a little too fast to see :)\ncy.viewport(\"macbook-15\");\ncy.wait(200);\ncy.viewport(\"macbook-13\");\ncy.wait(200);\ncy.viewport(\"macbook-11\");\ncy.wait(200);\ncy.viewport(\"ipad-2\");\ncy.wait(200);\ncy.viewport(\"ipad-mini\");\ncy.wait(200);\ncy.viewport(\"iphone-6+\");\ncy.wait(200);\ncy.viewport(\"iphone-6\");\ncy.wait(200);\ncy.viewport(\"iphone-5\");\ncy.wait(200);\ncy.viewport(\"iphone-4\");\ncy.wait(200);\ncy.viewport(\"iphone-3\");\ncy.wait(200); // cy.viewport() accepts an orientation for all presets\n// the default orientation is 'portrait'\ncy.viewport(\"ipad-2\", \"portrait\");\ncy.wait(200);\ncy.viewport(\"iphone-4\", \"landscape\");\ncy.wait(200); // The viewport will be reset back to the default dimensions\n// in between tests (the  default can be set in cypress.json)",
              "err": {},
              "uuid": "53621639-cbef-4a67-86b5-198995bc7197",
              "parentUUID": "75532d15-1983-462f-b0dc-24f79000cbb4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "53621639-cbef-4a67-86b5-198995bc7197"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3354,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9dc81deb-8692-4e67-afb6-c89d01d06be8",
      "title": "",
      "fullFile": "cypress/integration/examples/waiting.spec.js",
      "file": "cypress/integration/examples/waiting.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8b22946c-d757-461d-97f1-777ad51eb60b",
          "title": "Waiting",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.wait() - wait for a specific amount of time",
              "fullTitle": "Waiting cy.wait() - wait for a specific amount of time",
              "timedOut": null,
              "duration": 5540,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".wait-input1\").type(\"Wait 1000ms after typing\");\ncy.wait(1000);\ncy.get(\".wait-input2\").type(\"Wait 1000ms after typing\");\ncy.wait(1000);\ncy.get(\".wait-input3\").type(\"Wait 1000ms after typing\");\ncy.wait(1000);",
              "err": {},
              "uuid": "84e128d5-a7de-4eb5-b6da-bc9b5624cbc6",
              "parentUUID": "8b22946c-d757-461d-97f1-777ad51eb60b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wait() - wait for a specific route",
              "fullTitle": "Waiting cy.wait() - wait for a specific route",
              "timedOut": null,
              "duration": 804,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Listen to GET to comments/1\ncy.intercept(\"GET\", \"**/comments/*\").as(\"getComment\"); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get(\".network-btn\").click(); // wait for GET comments/1\ncy.wait(\"@getComment\").its(\"response.statusCode\").should(\"be.oneOf\", [200, 304]);",
              "err": {},
              "uuid": "ee3a330f-83fd-4dd4-b0f7-4435706581e9",
              "parentUUID": "8b22946c-d757-461d-97f1-777ad51eb60b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "84e128d5-a7de-4eb5-b6da-bc9b5624cbc6",
            "ee3a330f-83fd-4dd4-b0f7-4435706581e9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6344,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "40a8f6f4-dc69-46d4-a24a-e42667cb1486",
      "title": "",
      "fullFile": "cypress/integration/examples/window.spec.js",
      "file": "cypress/integration/examples/window.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "35339315-28a6-439c-9f7c-ff613caad5b2",
          "title": "Window",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.window() - get the global window object",
              "fullTitle": "Window cy.window() - get the global window object",
              "timedOut": null,
              "duration": 375,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/window\ncy.window().should(\"have.property\", \"top\");",
              "err": {},
              "uuid": "3260e7c2-b699-49ab-af50-b7d5f803fdd5",
              "parentUUID": "35339315-28a6-439c-9f7c-ff613caad5b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.document() - get the document object",
              "fullTitle": "Window cy.document() - get the document object",
              "timedOut": null,
              "duration": 169,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/document\ncy.document().should(\"have.property\", \"charset\").and(\"eq\", \"UTF-8\");",
              "err": {},
              "uuid": "1c66ee77-21e5-4ffc-9255-6bf4c8d05ac6",
              "parentUUID": "35339315-28a6-439c-9f7c-ff613caad5b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.title() - get the title",
              "fullTitle": "Window cy.title() - get the title",
              "timedOut": null,
              "duration": 84,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/title\ncy.title().should(\"include\", \"Kitchen Sink\");",
              "err": {},
              "uuid": "1fc6528e-6865-46cb-b4e5-8bbfbd6a664e",
              "parentUUID": "35339315-28a6-439c-9f7c-ff613caad5b2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3260e7c2-b699-49ab-af50-b7d5f803fdd5",
            "1c66ee77-21e5-4ffc-9255-6bf4c8d05ac6",
            "1fc6528e-6865-46cb-b4e5-8bbfbd6a664e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 628,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "aaad21b6-af2c-4e2b-bd59-814163a1ec1a",
      "title": "",
      "fullFile": "cypress/integration/tests/abcTest.spec.js",
      "file": "cypress/integration/tests/abcTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b34e4b4d-9f45-47fc-85b3-669c5d724636",
          "title": "Login",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Sign in",
              "fullTitle": "Login Sign in",
              "timedOut": null,
              "duration": 2857,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://react-redux.realworld.io/#/login\");\ncy.get('input[type=\"email\"]').type(\"cypress.demotests@gmail.com\");\ncy.get('input[type=\"password\"]').type(\"admin123\");\ncy.get(\".btn\").contains(\"Sign in\").should(\"be.visible\").click();",
              "err": {},
              "uuid": "f5dc7231-40fb-46e8-bdf3-933fac44960b",
              "parentUUID": "b34e4b4d-9f45-47fc-85b3-669c5d724636",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f5dc7231-40fb-46e8-bdf3-933fac44960b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2857,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "57015200-85f1-442f-b874-c237c069dac1",
      "title": "",
      "fullFile": "cypress/integration/tests/aliases.spec.js",
      "file": "cypress/integration/tests/aliases.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "56c100b4-de35-41b4-8e0d-8c7e733d8bf7",
          "title": "Create and mark-unmark as favorite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create a post",
              "fullTitle": "Create and mark-unmark as favorite Create a post",
              "timedOut": null,
              "duration": 12878,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// use of alias\ncy.get(\"ul.navbar-nav\").children().as(\"menu\");\ncy.get(\"@menu\").contains(\"New Post\").click();\ncy.hash().should(\"include\", \"#/editor\");\ncy.get(\"form\").within(function ($form) {\n  cy.get(\"input\").first().type(\"Test\");\n  cy.get(\"input\").eq(1).type(\"Test 1\");\n  cy.get(\"textarea\").last().type(\"Test 2\");\n  cy.contains(\"Publish Article\").click();\n});\ncy.url().should(\"include\", \"article\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find content: 'Your Feed' but never did.\n\nBecause this error occurred during a `before all` hook we are skipping the remaining tests in the current suite: `Create and mark-unmark as f...`",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find content: 'Your Feed' but never did.\n\nBecause this error occurred during a `before all` hook we are skipping the remaining tests in the current suite: `Create and mark-unmark as f...`\n    at Context.eval (https://react-redux.realworld.io/__cypress/tests?p=cypress/support/index.js:18:6)",
                "diff": null
              },
              "uuid": "9e4a8eca-99ec-4eea-ae4b-1925dba05673",
              "parentUUID": "56c100b4-de35-41b4-8e0d-8c7e733d8bf7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Mark-unmark as favorite",
              "fullTitle": "Create and mark-unmark as favorite Mark-unmark as favorite",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"ul.navbar-nav\").children().contains(\"QAMs\").click();\ncy.contains(\"My Articles\").should(\"be.visible\");\ncy.get(\".ion-heart\").first().click();\ncy.contains(\"Favorited Articles\").click();\ncy.url().should(\"include\", \"favorites\"); // use of alias\ncy.get(\".btn-primary\").first().then(function ($fav) {\n  return $fav.text();\n}).as(\"favCount\");\ncy.get(\"@favCount\").then(function ($cnt) {\n  expect(parseInt($cnt)).to.eq(1);\n});\ncy.get(\".btn-primary\").first().click();\ncy.reload();\ncy.contains(\"No articles are here... yet.\").should(\"be.visible\");\ncy.go(\"back\");",
              "err": {},
              "uuid": "5c34e6ee-71b6-4fb2-b655-3d1c0b8e07dc",
              "parentUUID": "56c100b4-de35-41b4-8e0d-8c7e733d8bf7",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "9e4a8eca-99ec-4eea-ae4b-1925dba05673"
          ],
          "pending": [],
          "skipped": [
            "5c34e6ee-71b6-4fb2-b655-3d1c0b8e07dc"
          ],
          "duration": 12878,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0c45e4de-34a2-48a4-8096-cfee815d059c",
      "title": "",
      "fullFile": "cypress/integration/tests/api.spec.js",
      "file": "cypress/integration/tests/api.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "956816d5-53b7-4e80-b997-226b8682391f",
          "title": "API Testing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "GET - read",
              "fullTitle": "API Testing GET - read",
              "timedOut": null,
              "duration": 1431,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request(\"/employees\").then(function (response) {\n  expect(response).to.have.property(\"status\", 200);\n  expect(response.body).to.not.be[\"null\"];\n  expect(response.body.data).to.have.length(24);\n});",
              "err": {},
              "uuid": "77ffca21-824c-42b6-8dd3-4d780a139351",
              "parentUUID": "956816d5-53b7-4e80-b997-226b8682391f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST - create",
              "fullTitle": "API Testing POST - create",
              "timedOut": null,
              "duration": 1356,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var item = {\n  name: \"test\",\n  salary: \"123\",\n  age: \"23\"\n};\ncy.request(\"POST\", \"/create\", item).its(\"body\").its(\"data\") // .should('deep.eq', item)\n.should(\"include\", {\n  name: \"test\"\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttp://dummy.restapiexample.com/api/v1/create\n\nThe response we received from your web server was:\n\n  > 429: Too Many Requests\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: http://dummy.restapiexample.com/api/v1/create\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_0) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/6.8.0 Chrome/87.0.4280.141 Electron/11.3.0 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 41\n}\nBody: {\"name\":\"test\",\"salary\":\"123\",\"age\":\"23\"}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 429 - Too Many Requests\nHeaders: {\n  \"content-encoding\": \"gzip\",\n  \"content-type\": \"text/html; charset=UTF-8\",\n  \"date\": \"Tue, 23 Mar 2021 08:21:22 GMT\",\n  \"display\": \"staticcontent_sol\",\n  \"expires\": \"Mon, 22 Mar 2021 08:21:22 GMT\",\n  \"host-header\": \"c2hhcmVkLmJsdWVob3N0LmNvbQ==\",\n  \"pagespeed\": \"off\",\n  \"referrer-policy\": \"\",\n  \"response\": \"429\",\n  \"retry-after\": \"21\",\n  \"server\": \"nginx/1.16.0\",\n  \"set-cookie\": [\n    \"ezopvc_133674=1; Path=/; Domain=restapiexample.com; Expires=Tue, 23 Mar 2021 08:51:22 UTC\",\n    \"ezepvv=0; Path=/; Domain=restapiexample.com; Expires=Wed, 24 Mar 2021 08:21:22 UTC\",\n    \"ezovid_133674=686863415; Path=/; Domain=restapiexample.com; Expires=Tue, 23 Mar 2021 08:51:22 UTC\",\n    \"lp_133674=http://dummy.restapiexample.com/api/v1/create; Path=/; Domain=restapiexample.com; Expires=Tue, 23 Mar 2021 08:51:22 UTC\",\n    \"ezovuuidtime_133674=1616487682; Path=/; Domain=restapiexample.com; Expires=Thu, 25 Mar 2021 08:21:22 UTC\",\n    \"ezovuuid_133674=28cb8ec9-b3ab-4b6f-42da-0d0a4008461a; Path=/; Domain=restapiexample.com; Expires=Tue, 23 Mar 2021 08:51:22 UTC\",\n    \"ezCMPCCS=true; Path=/; Domain=restapiexample.com; Expires=Wed, 23 Mar 2022 08:21:22 GMT\"\n  ],\n  \"vary\": \"Accept-Encoding, Accept-Encoding,Origin\",\n  \"x-ezoic-cdn\": \"Miss\",\n  \"x-middleton-display\": \"staticcontent_sol\",\n  \"x-middleton-response\": \"429\",\n  \"x-ratelimit-limit\": \"60\",\n  \"x-ratelimit-remaining\": \"56\",\n  \"x-ratelimit-reset\": \"1616487703\",\n  \"x-sol\": \"pub_site\",\n  \"content-length\": \"588\"\n}\nBody: <!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n        <title>Too Many Requests</title>\n\n        <!-- Fonts -->\n        <link rel=\"dns-prefetch\" href=\"//fonts.gstatic.com\">\n        <link href=\"https://fonts.googleapis.com/css?family=Nunito\" rel=\"stylesheet\">\n\n        <!-- Styles -->\n        <style>\n  html, body {\n      background-color: #fff;\n      color: #636b6f;\n      font-family: 'Nunito', sans-serif;\n      font-weight: 100;\n      height: 100vh;\n      margin: 0;\n  }\n\n  .full-height {\n      height: 100vh;\n  }\n\n  .flex-center {\n      align-items: center;\n      display: flex;\n      justify-content: center;\n  }\n\n  .position-ref {\n      position: relative;\n  }\n\n  .code {\n      border-right: 2px solid;\n      font-size: 26px;\n      padding: 0 15px 0 15px;\n      text-align: center;\n  }\n\n  .message {\n      font-size: 18px;\n      text-align: center;\n  }\n        </style>\n    </head>\n    <body>\n        <div class=\"flex-center position-ref full-height\">\n  <div class=\"code\">\n      429            </div>\n\n  <div class=\"message\" style=\"padding: 10px;\">\n      Too Many Requests            </div>\n        </div>\n    </body>\n</html>\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttp://dummy.restapiexample.com/api/v1/create\n\nThe response we received from your web server was:\n\n  > 429: Too Many Requests\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: http://dummy.restapiexample.com/api/v1/create\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_0) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/6.8.0 Chrome/87.0.4280.141 Electron/11.3.0 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 41\n}\nBody: {\"name\":\"test\",\"salary\":\"123\",\"age\":\"23\"}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 429 - Too Many Requests\nHeaders: {\n  \"content-encoding\": \"gzip\",\n  \"content-type\": \"text/html; charset=UTF-8\",\n  \"date\": \"Tue, 23 Mar 2021 08:21:22 GMT\",\n  \"display\": \"staticcontent_sol\",\n  \"expires\": \"Mon, 22 Mar 2021 08:21:22 GMT\",\n  \"host-header\": \"c2hhcmVkLmJsdWVob3N0LmNvbQ==\",\n  \"pagespeed\": \"off\",\n  \"referrer-policy\": \"\",\n  \"response\": \"429\",\n  \"retry-after\": \"21\",\n  \"server\": \"nginx/1.16.0\",\n  \"set-cookie\": [\n    \"ezopvc_133674=1; Path=/; Domain=restapiexample.com; Expires=Tue, 23 Mar 2021 08:51:22 UTC\",\n    \"ezepvv=0; Path=/; Domain=restapiexample.com; Expires=Wed, 24 Mar 2021 08:21:22 UTC\",\n    \"ezovid_133674=686863415; Path=/; Domain=restapiexample.com; Expires=Tue, 23 Mar 2021 08:51:22 UTC\",\n    \"lp_133674=http://dummy.restapiexample.com/api/v1/create; Path=/; Domain=restapiexample.com; Expires=Tue, 23 Mar 2021 08:51:22 UTC\",\n    \"ezovuuidtime_133674=1616487682; Path=/; Domain=restapiexample.com; Expires=Thu, 25 Mar 2021 08:21:22 UTC\",\n    \"ezovuuid_133674=28cb8ec9-b3ab-4b6f-42da-0d0a4008461a; Path=/; Domain=restapiexample.com; Expires=Tue, 23 Mar 2021 08:51:22 UTC\",\n    \"ezCMPCCS=true; Path=/; Domain=restapiexample.com; Expires=Wed, 23 Mar 2022 08:21:22 GMT\"\n  ],\n  \"vary\": \"Accept-Encoding, Accept-Encoding,Origin\",\n  \"x-ezoic-cdn\": \"Miss\",\n  \"x-middleton-display\": \"staticcontent_sol\",\n  \"x-middleton-response\": \"429\",\n  \"x-ratelimit-limit\": \"60\",\n  \"x-ratelimit-remaining\": \"56\",\n  \"x-ratelimit-reset\": \"1616487703\",\n  \"x-sol\": \"pub_site\",\n  \"content-length\": \"588\"\n}\nBody: <!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n        <title>Too Many Requests</title>\n\n        <!-- Fonts -->\n        <link rel=\"dns-prefetch\" href=\"//fonts.gstatic.com\">\n        <link href=\"https://fonts.googleapis.com/css?family=Nunito\" rel=\"stylesheet\">\n\n        <!-- Styles -->\n        <style>\n  html, body {\n      background-color: #fff;\n      color: #636b6f;\n      font-family: 'Nunito', sans-serif;\n      font-weight: 100;\n      height: 100vh;\n      margin: 0;\n  }\n\n  .full-height {\n      height: 100vh;\n  }\n\n  .flex-center {\n      align-items: center;\n      display: flex;\n      justify-content: center;\n  }\n\n  .position-ref {\n      position: relative;\n  }\n\n  .code {\n      border-right: 2px solid;\n      font-size: 26px;\n      padding: 0 15px 0 15px;\n      text-align: center;\n  }\n\n  .message {\n      font-size: 18px;\n      text-align: center;\n  }\n        </style>\n    </head>\n    <body>\n        <div class=\"flex-center position-ref full-height\">\n  <div class=\"code\">\n      429            </div>\n\n  <div class=\"message\" style=\"padding: 10px;\">\n      Too Many Requests            </div>\n        </div>\n    </body>\n</html>\n\nhttps://on.cypress.io/request\n    at https://react-redux.realworld.io/__cypress/runner/cypress_runner.js:160310:21\n    at tryCatcher (https://react-redux.realworld.io/__cypress/runner/cypress_runner.js:10765:23)\n    at Promise._settlePromiseFromHandler (https://react-redux.realworld.io/__cypress/runner/cypress_runner.js:8700:31)\n    at Promise._settlePromise (https://react-redux.realworld.io/__cypress/runner/cypress_runner.js:8757:18)\n    at Promise._settlePromise0 (https://react-redux.realworld.io/__cypress/runner/cypress_runner.js:8802:10)\n    at Promise._settlePromises (https://react-redux.realworld.io/__cypress/runner/cypress_runner.js:8882:18)\n    at _drainQueueStep (https://react-redux.realworld.io/__cypress/runner/cypress_runner.js:5472:12)\n    at _drainQueue (https://react-redux.realworld.io/__cypress/runner/cypress_runner.js:5465:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (https://react-redux.realworld.io/__cypress/runner/cypress_runner.js:5481:5)\n    at Async.drainQueues (https://react-redux.realworld.io/__cypress/runner/cypress_runner.js:5351:14)\nFrom Your Spec Code:\n    at Context.eval (https://react-redux.realworld.io/__cypress/tests?p=cypress/integration/tests/api.spec.js:20:8)",
                "diff": null
              },
              "uuid": "e4aa9d12-d377-47af-87a4-d06573fd6cc8",
              "parentUUID": "956816d5-53b7-4e80-b997-226b8682391f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT - update",
              "fullTitle": "API Testing PUT - update",
              "timedOut": null,
              "duration": 16398,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var item = {\n  name: \"test1\"\n};\ncy.request({\n  method: \"PUT\",\n  url: \"/update/1\",\n  body: item,\n  failOnStatusCode: false\n}).its(\"status\").should(\"eq\", 401);",
              "err": {
                "message": "AssertionError: Timed out retrying after 15000ms: expected 429 to equal 401",
                "estack": "AssertionError: Timed out retrying after 15000ms: expected 429 to equal 401\n    at Context.eval (https://react-redux.realworld.io/__cypress/tests?p=cypress/integration/tests/api.spec.js:34:22)",
                "diff": "- 429\n+ 401\n"
              },
              "uuid": "0ee1b735-a19f-4daf-8858-a37e34b3ebc8",
              "parentUUID": "956816d5-53b7-4e80-b997-226b8682391f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "77ffca21-824c-42b6-8dd3-4d780a139351"
          ],
          "failures": [
            "e4aa9d12-d377-47af-87a4-d06573fd6cc8",
            "0ee1b735-a19f-4daf-8858-a37e34b3ebc8"
          ],
          "pending": [],
          "skipped": [],
          "duration": 19185,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "64a1600d-1aa9-49e5-b09c-c51efaf44c69",
      "title": "",
      "fullFile": "cypress/integration/tests/customCommand.spec.js",
      "file": "cypress/integration/tests/customCommand.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5ef3be80-17de-4498-a709-c636c38ac5c6",
          "title": "Create and mark-unmark as favorite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create a post",
              "fullTitle": "Create and mark-unmark as favorite Create a post",
              "timedOut": null,
              "duration": 12790,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get(\"ul.navbar-nav\").children().contains(\"New Post\").click();\ncy.hash().should(\"include\", \"#/editor\");\ncy.get(\"form\").within(function ($form) {\n  cy.get(\"input\").first().type(\"Test\");\n  cy.get(\"input\").eq(1).type(\"Test 1\");\n  cy.get(\"textarea\").last().type(\"Test 2\");\n  cy.contains(\"Publish Article\").click();\n});\ncy.url().should(\"include\", \"article\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find content: 'Your Feed' but never did.\n\nBecause this error occurred during a `before all` hook we are skipping the remaining tests in the current suite: `Create and mark-unmark as f...`",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find content: 'Your Feed' but never did.\n\nBecause this error occurred during a `before all` hook we are skipping the remaining tests in the current suite: `Create and mark-unmark as f...`\n    at Context.eval (https://react-redux.realworld.io/__cypress/tests?p=cypress/support/index.js:18:6)",
                "diff": null
              },
              "uuid": "6f910ba4-3883-4a16-8858-a1b66897e682",
              "parentUUID": "5ef3be80-17de-4498-a709-c636c38ac5c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Mark-unmark as favorite",
              "fullTitle": "Create and mark-unmark as favorite Mark-unmark as favorite",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"ul.navbar-nav\").children().contains(\"QAMs\").click();\ncy.contains(\"My Articles\").should(\"be.visible\");\ncy.get(\".ion-heart\").first().click();\ncy.contains(\"Favorited Articles\").click();\ncy.url().should(\"include\", \"favorites\");\ncy.get(\".ion-heart\").first().click();\ncy.reload();\ncy.contains(\"No articles are here... yet.\").should(\"be.visible\");\ncy.go(\"back\");",
              "err": {},
              "uuid": "9fb8027d-b245-4e66-9fe1-2b8c761cf04f",
              "parentUUID": "5ef3be80-17de-4498-a709-c636c38ac5c6",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "6f910ba4-3883-4a16-8858-a1b66897e682"
          ],
          "pending": [],
          "skipped": [
            "9fb8027d-b245-4e66-9fe1-2b8c761cf04f"
          ],
          "duration": 12790,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f88ef9ca-c667-460d-ae02-adddbdf7a95a",
      "title": "",
      "fullFile": "cypress/integration/tests/fixtures.spec.js",
      "file": "cypress/integration/tests/fixtures.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a04370f5-2214-4f36-b59a-77576a0b3bd8",
          "title": "Login",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Sign in",
              "fullTitle": "Login Sign in",
              "timedOut": null,
              "duration": 2597,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://react-redux.realworld.io/#/login\");\ncy.get('input[type=\"email\"]').type(this.user.email);\ncy.get('input[type=\"password\"]').type(this.user.password);\ncy.get(\".btn\").contains(\"Sign in\").should(\"be.visible\").click();",
              "err": {},
              "uuid": "b5c17d81-a3c0-4a51-8cec-3e32341ec69f",
              "parentUUID": "a04370f5-2214-4f36-b59a-77576a0b3bd8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b5c17d81-a3c0-4a51-8cec-3e32341ec69f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2597,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c6c358dd-7208-4920-a20f-392622612164",
      "title": "",
      "fullFile": "cypress/integration/tests/identifyElements.spec.js",
      "file": "cypress/integration/tests/identifyElements.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9b697f90-b7a1-4e9f-990c-159dbbc2705b",
          "title": "Create and mark-unmark as favorite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Sign in",
              "fullTitle": "Create and mark-unmark as favorite Sign in",
              "timedOut": null,
              "duration": 13265,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://react-redux.realworld.io/#/login\");\ncy.title().should(\"eq\", \"Conduit\");\ncy.location(\"protocol\").should(\"eq\", \"https:\");\ncy.get(\"form\").within(function ($form) {\n  // cy.get() will only search for elements within form, not within the entire document\n  cy.get('input[type = \"email\"]').type(\"cypress.demotests@gmail.com\");\n  cy.get('input[type = \"password\"]').type(\"admin123\");\n  cy.root().submit(); // submits the form yielded from 'within'\n});\ncy.contains(\"Your Feed\", {\n  timeout: 10000\n}).should(\"be.visible\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find content: 'Your Feed' but never did.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find content: 'Your Feed' but never did.\n    at Context.eval (https://react-redux.realworld.io/__cypress/tests?p=cypress/integration/tests/identifyElements.spec.js:18:8)",
                "diff": null
              },
              "uuid": "b5e95c87-2e8d-442c-83ff-4a41f4c692cf",
              "parentUUID": "9b697f90-b7a1-4e9f-990c-159dbbc2705b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create a post",
              "fullTitle": "Create and mark-unmark as favorite Create a post",
              "timedOut": null,
              "duration": 15469,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get(\"ul.navbar-nav\").children().contains(\"New Post\").click();\ncy.hash().should(\"include\", \"#/editor\");\ncy.get(\"form\").within(function ($form) {\n  cy.get(\"input\").first().type(\"Test\");\n  cy.get(\"input\").eq(1).type(\"Test 1\");\n  cy.get(\"textarea\").last().type(\"Test 2\");\n  cy.contains(\"Publish Article\").click();\n});\ncy.url().should(\"include\", \"article\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 15000ms: Expected to find content: 'New Post' within the element: [ <li.nav-item>, 2 more... ] but never did.",
                "estack": "AssertionError: Timed out retrying after 15000ms: Expected to find content: 'New Post' within the element: [ <li.nav-item>, 2 more... ] but never did.\n    at Context.eval (https://react-redux.realworld.io/__cypress/tests?p=cypress/integration/tests/identifyElements.spec.js:21:40)",
                "diff": null
              },
              "uuid": "10565c45-59e7-4c1e-9cf4-a7b3fe7a82e3",
              "parentUUID": "9b697f90-b7a1-4e9f-990c-159dbbc2705b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Mark-unmark as favorite",
              "fullTitle": "Create and mark-unmark as favorite Mark-unmark as favorite",
              "timedOut": null,
              "duration": 15327,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get(\"ul.navbar-nav\").children().contains(\"QAMs\").click();\ncy.contains(\"My Articles\").should(\"be.visible\");\ncy.get(\".ion-heart\").first().click();\ncy.contains(\"Favorited Articles\").click();\ncy.url().should(\"include\", \"favorites\");\ncy.get(\".ion-heart\").first().click();\ncy.reload();\ncy.contains(\"No articles are here... yet.\").should(\"be.visible\");\ncy.go(\"back\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 15000ms: Expected to find content: 'QAMs' within the element: [ <li.nav-item>, 2 more... ] but never did.",
                "estack": "AssertionError: Timed out retrying after 15000ms: Expected to find content: 'QAMs' within the element: [ <li.nav-item>, 2 more... ] but never did.\n    at Context.eval (https://react-redux.realworld.io/__cypress/tests?p=cypress/integration/tests/identifyElements.spec.js:32:40)",
                "diff": null
              },
              "uuid": "ccf1fe1b-dcc8-477f-a42f-77c597c5c7d2",
              "parentUUID": "9b697f90-b7a1-4e9f-990c-159dbbc2705b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b5e95c87-2e8d-442c-83ff-4a41f4c692cf",
            "10565c45-59e7-4c1e-9cf4-a7b3fe7a82e3",
            "ccf1fe1b-dcc8-477f-a42f-77c597c5c7d2"
          ],
          "pending": [],
          "skipped": [],
          "duration": 44061,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c02e643b-2e8f-4518-b13b-638c43307ddc",
      "title": "",
      "fullFile": "cypress/integration/tests/pom.spec.js",
      "file": "cypress/integration/tests/pom.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "14d5181b-2b22-4cb4-a1e2-02781c7292cd",
          "title": "Login",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Sign in",
              "fullTitle": "Login Sign in",
              "timedOut": null,
              "duration": 2592,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://react-redux.realworld.io/#/login\");\nlogin.email().type(\"cypress.demotests@gmail.com\");\nlogin.password().type(\"admin123\");\nlogin.signInButton().should(\"be.visible\").click();",
              "err": {},
              "uuid": "c9c0e439-33ce-4b1b-acc6-5ad5d09be643",
              "parentUUID": "14d5181b-2b22-4cb4-a1e2-02781c7292cd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c9c0e439-33ce-4b1b-acc6-5ad5d09be643"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2592,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "06a1d4f6-d9b8-475b-b91a-fd57c05b5ca0",
      "title": "",
      "fullFile": "cypress/integration/tests/readWriteFiles.spec.js",
      "file": "cypress/integration/tests/readWriteFiles.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "066e4364-2942-4caf-9c2b-c2a8b0a07aae",
          "title": "Read-Write files content",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Write to a file",
              "fullTitle": "Read-Write files content Write to a file",
              "timedOut": null,
              "duration": 74,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.writeFile(\"dummy.txt\", \"Hello World\\n\");\ncy.writeFile(\"dummy.txt\", \"I am Nishant\", {\n  flag: \"a+\"\n});",
              "err": {},
              "uuid": "de234231-68c3-4e95-bfb4-36a60b143070",
              "parentUUID": "066e4364-2942-4caf-9c2b-c2a8b0a07aae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Read from a file",
              "fullTitle": "Read-Write files content Read from a file",
              "timedOut": null,
              "duration": 15309,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.readFile(\"dummy\").should(\"contains\", \"Hello World\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 15000ms: `cy.readFile(\"dummy\")` failed because the file does not exist at the following path:\n\n`/Users/macbook/Desktop/Repositories/cypress-demo/dummy`\n\nhttps://on.cypress.io/readfile",
                "estack": "AssertionError: Timed out retrying after 15000ms: `cy.readFile(\"dummy\")` failed because the file does not exist at the following path:\n\n`/Users/macbook/Desktop/Repositories/cypress-demo/dummy`\n\nhttps://on.cypress.io/readfile\n    at Context.eval (https://react-redux.realworld.io/__cypress/tests?p=cypress/integration/tests/readWriteFiles.spec.js:13:26)",
                "diff": null
              },
              "uuid": "b08fd8bb-af63-44e3-b238-cd572c5e8c58",
              "parentUUID": "066e4364-2942-4caf-9c2b-c2a8b0a07aae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "de234231-68c3-4e95-bfb4-36a60b143070"
          ],
          "failures": [
            "b08fd8bb-af63-44e3-b238-cd572c5e8c58"
          ],
          "pending": [],
          "skipped": [],
          "duration": 15383,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "aa3de9cc-2a25-425b-939c-68447d726230",
      "title": "",
      "fullFile": "cypress/integration/tests/thenCommand.spec.js",
      "file": "cypress/integration/tests/thenCommand.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "508d9b8d-f7bf-4344-9070-3ede88a5ff6c",
          "title": "Create and mark-unmark as favorite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create a post",
              "fullTitle": "Create and mark-unmark as favorite Create a post",
              "timedOut": null,
              "duration": 12411,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get(\"ul.navbar-nav\").children().contains(\"New Post\").click();\ncy.hash().should(\"include\", \"#/editor\");\ncy.get(\"form\").within(function ($form) {\n  cy.get(\"input\").first().type(\"Test\");\n  cy.get(\"input\").eq(1).type(\"Test 1\");\n  cy.get(\"textarea\").last().type(\"Test 2\");\n  cy.contains(\"Publish Article\").click();\n});\ncy.url().should(\"include\", \"article\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find content: 'Your Feed' but never did.\n\nBecause this error occurred during a `before all` hook we are skipping the remaining tests in the current suite: `Create and mark-unmark as f...`",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find content: 'Your Feed' but never did.\n\nBecause this error occurred during a `before all` hook we are skipping the remaining tests in the current suite: `Create and mark-unmark as f...`\n    at Context.eval (https://react-redux.realworld.io/__cypress/tests?p=cypress/support/index.js:18:6)",
                "diff": null
              },
              "uuid": "bef57b52-7696-412b-a2d0-907949fc0449",
              "parentUUID": "508d9b8d-f7bf-4344-9070-3ede88a5ff6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Mark-unmark as favorite",
              "fullTitle": "Create and mark-unmark as favorite Mark-unmark as favorite",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"ul.navbar-nav\").children().contains(\"QAMs\").click();\ncy.contains(\"My Articles\").should(\"be.visible\");\ncy.get(\".ion-heart\").first().click();\ncy.contains(\"Favorited Articles\").click();\ncy.url().should(\"include\", \"favorites\");\ncy.get(\".btn-primary\").first().then(function ($fav) {\n  var favCount = $fav.text();\n  expect(parseInt(favCount)).to.eq(1);\n}).click();\ncy.reload();\ncy.contains(\"No articles are here... yet.\").should(\"be.visible\");\ncy.go(\"back\");",
              "err": {},
              "uuid": "6e369cb8-24a8-45f0-8b17-e5bec96c88ae",
              "parentUUID": "508d9b8d-f7bf-4344-9070-3ede88a5ff6c",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "bef57b52-7696-412b-a2d0-907949fc0449"
          ],
          "pending": [],
          "skipped": [
            "6e369cb8-24a8-45f0-8b17-e5bec96c88ae"
          ],
          "duration": 12411,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "25d09e26-fd63-4902-87d6-c4cca98d6c11",
      "title": "",
      "fullFile": "cypress/integration/tests/uploadFiles.spec.js",
      "file": "cypress/integration/tests/uploadFiles.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e4ddc4db-00d9-4eb9-9e0a-08076d8dc8a5",
          "title": "Working with plugins",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "File upload",
              "fullTitle": "Working with plugins File upload",
              "timedOut": null,
              "duration": 17565,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://cgi-lib.berkeley.edu/ex/fup.html\"); // upload file\nvar fileName = \"dummy.pdf\";\n/* For cypress-file-upload version < 4.0.0\n    cy.fixture(fileName).then(fileContent => {\n        cy.get('[type=\"file\"]').upload({ fileContent, fileName, mimeType: 'application/pdf' });\n    })*/\n// For cypress-file-upload version > 4.0.0\ncy.get('[type=\"file\"]').attachFile(fileName);\ncy.get('[type=\"submit\"]').click();\ncy.contains(\"You've uploaded a file.  Your notes on the file were:\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 15000ms: Expected to find content: 'You've uploaded a file.  Your notes on the file were:' but never did.",
                "estack": "AssertionError: Timed out retrying after 15000ms: Expected to find content: 'You've uploaded a file.  Your notes on the file were:' but never did.\n    at Context.eval (https://cgi-lib.berkeley.edu/__cypress/tests?p=cypress/integration/tests/uploadFiles.spec.js:18:8)",
                "diff": null
              },
              "uuid": "e1620a72-46cf-430f-9793-0e7240360317",
              "parentUUID": "e4ddc4db-00d9-4eb9-9e0a-08076d8dc8a5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "e1620a72-46cf-430f-9793-0e7240360317"
          ],
          "pending": [],
          "skipped": [],
          "duration": 17565,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b4ed53f6-5929-4e9d-b38f-8a67efaa2da6",
      "title": "",
      "fullFile": "cypress/integration/tests/url.spec.js",
      "file": "cypress/integration/tests/url.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4cffadaa-472c-485a-8ab6-8210dd21d2fd",
          "title": "Create and mark-unmark as favorite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Sign in",
              "fullTitle": "Create and mark-unmark as favorite Sign in",
              "timedOut": null,
              "duration": 13007,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://react-redux.realworld.io/#/login\");\ncy.title().should(\"eq\", \"Conduit\");\ncy.location(\"protocol\").should(\"eq\", \"https:\");\ncy.get('input[type=\"email\"]').type(\"cypress.demotests@gmail.com\");\ncy.get('input[type=\"password\"]').type(\"admin123\");\ncy.get(\".btn\").contains(\"Sign in\").should(\"be.visible\").click();\ncy.contains(\"Your Feed\", {\n  timeout: 10000\n}).should(\"be.visible\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find content: 'Your Feed' but never did.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find content: 'Your Feed' but never did.\n    at Context.eval (https://react-redux.realworld.io/__cypress/tests?p=cypress/integration/tests/url.spec.js:15:8)",
                "diff": null
              },
              "uuid": "6a1a3690-6a64-44d2-8ec9-0e84414e677d",
              "parentUUID": "4cffadaa-472c-485a-8ab6-8210dd21d2fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create a post",
              "fullTitle": "Create and mark-unmark as favorite Create a post",
              "timedOut": null,
              "duration": 15331,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.contains(\"New Post\").click(); //cy.location('hash').should('include','#/editor')\ncy.hash().should(\"include\", \"#/editor\");\ncy.get('input[placeholder=\"Article Title\"]').type(\"Test\");\ncy.get('input[placeholder=\"What\\'s this article about?\"]').type(\"Test 1\");\ncy.get('textarea[placeholder=\"Write your article (in markdown)\"]').type(\"Test 2\");\ncy.contains(\"Publish Article\").click();\ncy.url().should(\"include\", \"article\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 15000ms: Expected to find content: 'New Post' but never did.",
                "estack": "AssertionError: Timed out retrying after 15000ms: Expected to find content: 'New Post' but never did.\n    at Context.eval (https://react-redux.realworld.io/__cypress/tests?p=cypress/integration/tests/url.spec.js:18:8)",
                "diff": null
              },
              "uuid": "1701adc3-773c-47d1-841f-cedb59a48308",
              "parentUUID": "4cffadaa-472c-485a-8ab6-8210dd21d2fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Mark-unmark as favorite",
              "fullTitle": "Create and mark-unmark as favorite Mark-unmark as favorite",
              "timedOut": null,
              "duration": 15347,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get(\".nav-link\").contains(\"QAMs\").click();\ncy.contains(\"My Articles\").should(\"be.visible\");\ncy.get(\".ion-heart\").click();\ncy.contains(\"Favorited Articles\").click();\ncy.url().should(\"include\", \"favorites\");\ncy.get(\".ion-heart\").click();\ncy.reload();\ncy.contains(\"No articles are here... yet.\").should(\"be.visible\");\ncy.go(\"back\"); //cy.go(-1)\n//cy.go('forward')\n//cy.go(1)",
              "err": {
                "message": "AssertionError: Timed out retrying after 15000ms: Expected to find content: 'QAMs' within the element: [ <a.nav-link>, 2 more... ] but never did.",
                "estack": "AssertionError: Timed out retrying after 15000ms: Expected to find content: 'QAMs' within the element: [ <a.nav-link>, 2 more... ] but never did.\n    at Context.eval (https://react-redux.realworld.io/__cypress/tests?p=cypress/integration/tests/url.spec.js:28:25)",
                "diff": null
              },
              "uuid": "c451289f-e2b8-42a1-b366-e31573d1ff52",
              "parentUUID": "4cffadaa-472c-485a-8ab6-8210dd21d2fd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "6a1a3690-6a64-44d2-8ec9-0e84414e677d",
            "1701adc3-773c-47d1-841f-cedb59a48308",
            "c451289f-e2b8-42a1-b366-e31573d1ff52"
          ],
          "pending": [],
          "skipped": [],
          "duration": 43685,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b98f5421-8d7f-4d3e-9953-3ab5cd4e9059",
      "title": "",
      "fullFile": "cypress/integration/zeroTest/zeroTest.js",
      "file": "cypress/integration/zeroTest/zeroTest.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "An uncaught error was detected outside of a test",
          "fullTitle": "An uncaught error was detected outside of a test",
          "timedOut": null,
          "duration": 356,
          "state": "failed",
          "speed": null,
          "pass": false,
          "fail": true,
          "pending": false,
          "context": null,
          "code": "throw err;",
          "err": {
            "message": "ReferenceError: The following error originated from your test code, not from Cypress.\n\n  > Given is not defined\n\nWhen Cypress detects uncaught errors originating from your test code it will automatically fail the current test.\n\nCypress could not associate this error to any specific test.\n\nWe dynamically generated a new test to display this failure.",
            "estack": "ReferenceError: The following error originated from your test code, not from Cypress.\n\n  > Given is not defined\n\nWhen Cypress detects uncaught errors originating from your test code it will automatically fail the current test.\n\nCypress could not associate this error to any specific test.\n\nWe dynamically generated a new test to display this failure.\n    at Object.1 (https://react-redux.realworld.io/__cypress/tests?p=cypress/integration/zeroTest/zeroTest.js:4:1)\n    at o (https://react-redux.realworld.io/__cypress/tests?p=cypress/integration/zeroTest/zeroTest.js:1:265)\n    at r (https://react-redux.realworld.io/__cypress/tests?p=cypress/integration/zeroTest/zeroTest.js:1:431)\n    at eval (https://react-redux.realworld.io/__cypress/tests?p=cypress/integration/zeroTest/zeroTest.js:1:460)\n    at eval (<anonymous>)",
            "diff": null
          },
          "uuid": "636bd05d-216a-4ab4-ba9f-47d7355f34a9",
          "parentUUID": "b98f5421-8d7f-4d3e-9953-3ab5cd4e9059",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [],
      "failures": [
        "636bd05d-216a-4ab4-ba9f-47d7355f34a9"
      ],
      "pending": [],
      "skipped": [],
      "duration": 356,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}