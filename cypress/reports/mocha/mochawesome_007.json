{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 3,
    "pending": 0,
    "failures": 1,
    "start": "2021-03-23T07:54:37.537Z",
    "end": "2021-03-23T07:54:41.009Z",
    "duration": 3472,
    "testsRegistered": 4,
    "passPercent": 75,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "488ad5b5-07a9-494f-8175-54515e0f6a0a",
      "title": "",
      "fullFile": "cypress/integration/examples/files.spec.js",
      "file": "cypress/integration/examples/files.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b1cd54e0-e0fe-4e59-bde8-da740af5df88",
          "title": "Files",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.fixture() - load a fixture",
              "fullTitle": "Files cy.fixture() - load a fixture",
              "timedOut": null,
              "duration": 795,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/fixture\n// Instead of writing a response inline you can\n// use a fixture file's content.\n// when application makes an Ajax request matching \"GET **/comments/*\"\n// Cypress will intercept it and reply with the object in `example.json` fixture\ncy.intercept(\"GET\", \"**/comments/*\", {\n  fixture: \"example.json\"\n}).as(\"getComment\"); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get(\".fixture-btn\").click();\ncy.wait(\"@getComment\").its(\"response.body\").should(\"have.property\", \"name\").and(\"include\", \"Using fixtures to represent data\");",
              "err": {
                "message": "TypeError: cy.intercept is not a function",
                "estack": "TypeError: cy.intercept is not a function\n    at Context.<anonymous> (https://example.cypress.io/__cypress/tests?p=cypress/integration/examples/files.spec.js-789:32:8)",
                "diff": null
              },
              "uuid": "efe41209-43ce-45a0-bc6c-d224e7574936",
              "parentUUID": "b1cd54e0-e0fe-4e59-bde8-da740af5df88",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.fixture() or require - load a fixture",
              "fullTitle": "Files cy.fixture() or require - load a fixture",
              "timedOut": null,
              "duration": 200,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// we are inside the \"function () { ... }\"\n// callback and can use test context object \"this\"\n// \"this.example\" was loaded in \"beforeEach\" function callback\nexpect(this.example, \"fixture in the test context\").to.deep.equal(requiredExample); // or use \"cy.wrap\" and \"should('deep.equal', ...)\" assertion\n// @ts-ignore\ncy.wrap(this.example, \"fixture vs require\").should(\"deep.equal\", requiredExample);",
              "err": {},
              "uuid": "e6f6e1e3-37af-4549-a6a6-e05f5ad9310e",
              "parentUUID": "b1cd54e0-e0fe-4e59-bde8-da740af5df88",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.readFile() - read file contents",
              "fullTitle": "Files cy.readFile() - read file contents",
              "timedOut": null,
              "duration": 162,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/readfile\n// You can read a file and yield its contents\n// The filePath is relative to your project's root.\ncy.readFile(\"cypress.json\").then(function (json) {\n  expect(json).to.be.an(\"object\");\n});",
              "err": {},
              "uuid": "a4c033d2-8160-4db7-87f5-97bd4a1e25c1",
              "parentUUID": "b1cd54e0-e0fe-4e59-bde8-da740af5df88",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.writeFile() - write to a file",
              "fullTitle": "Files cy.writeFile() - write to a file",
              "timedOut": null,
              "duration": 1136,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/writefile\n// You can write to a file\n// Use a response from a request to automatically\n// generate a fixture file for use later\ncy.request(\"https://jsonplaceholder.cypress.io/users\").then(function (response) {\n  cy.writeFile(\"cypress/fixtures/users.json\", response.body);\n});\ncy.fixture(\"users\").should(function (users) {\n  expect(users[0].name).to.exist;\n}); // JavaScript arrays and objects are stringified\n// and formatted into text.\ncy.writeFile(\"cypress/fixtures/profile.json\", {\n  id: 8739,\n  name: \"Jane\",\n  email: \"jane@example.com\"\n});\ncy.fixture(\"profile\").should(function (profile) {\n  expect(profile.name).to.eq(\"Jane\");\n});",
              "err": {},
              "uuid": "2fa74f0a-9c00-4a0c-82b4-b1862958b719",
              "parentUUID": "b1cd54e0-e0fe-4e59-bde8-da740af5df88",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e6f6e1e3-37af-4549-a6a6-e05f5ad9310e",
            "a4c033d2-8160-4db7-87f5-97bd4a1e25c1",
            "2fa74f0a-9c00-4a0c-82b4-b1862958b719"
          ],
          "failures": [
            "efe41209-43ce-45a0-bc6c-d224e7574936"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2293,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}